Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports SBDal
Imports SBModel
Imports SBUtility
Imports System.Net
Public Class InquiryComparisonStatementDAL
    Dim NotificationDAL As New NotificationTemplatesDAL


    Public Function Add(ByVal obj As List(Of InquiryComparisonStatement)) As Boolean
        Dim Con As New SqlConnection(SQLHelper.CON_STR)
        If Con.State = ConnectionState.Closed Then Con.Open()
        'Dim trans As SqlTransaction = Con.BeginTransaction
        Try
            'Public Property Qty As Double
            'Public Property Price As Double
            'Public Property DiscountPer As Double
            'Public Property SalesTaxPer As Double
            'Public Property AddTaxPer As Double
            'Public Property IncTaxPer As Double
            'Public Property CDPer As Double
            'Public Property NetPrice As Double
            'Public Property OtherCharges As Double
            'Public Property CurrencyId As Integer
            'Public Property CurrencyRate As Double
            'Public Property CurrencySymbol As String

            For Each objMod As InquiryComparisonStatement In obj
                Dim trans As SqlTransaction = Con.BeginTransaction
                Try
                    Dim strSQL As String = String.Empty
                    'Ali Faisal : TFS1355 : Add column of comments in comparison statement table
                    strSQL = "If Not Exists(Select InquiryComparisonStatementId FROM InquiryComparisonStatement Where InquiryComparisonStatementId =" & objMod.InquiryComparisonStatementId & ") INSERT INTO InquiryComparisonStatement(VendorQuotationDetailId, VendorId, PurchaseInuiryId, PurchaseInquiryDetailId, NetCostValue, Margin, QuotedCostValue, Approved, UserName, Dated, HeadArticleId, Qty, Price, DiscountPer, SalesTaxPer, AddTaxPer, IncTaxPer, CDPer, NetPrice, OtherCharges, CurrencyId, CurrencyRate, CurrencySymbol, Comments, RequirementDescription) " _
                    & " VALUES(" & objMod.VendorQuotationDetailId & ", " & objMod.VendorId & ", " & objMod.PurchaseInuiryId & ", " & IIf(objMod.PurchaseInquiryDetailId = 0, "NULL", objMod.PurchaseInquiryDetailId) & ", " & objMod.NetCostValue & ", " & objMod.Margin & ", " & objMod.QuotedCostValue & ", " & IIf(objMod.Approved = True, 1, 0) & ", '" & objMod.UserName.Replace("'", "''") & "', '" & objMod.Dated.ToString("yyyy-M-dd hh:mm:ss tt") & "', " & objMod.HeadArticleId & ", " & objMod.Qty & ", " & objMod.Price & ", " & objMod.DiscountPer & ", " & objMod.SalesTaxPer & ", " & objMod.AddTaxPer & ", " & objMod.IncTaxPer & ", " & objMod.CDPer & ", " & objMod.NetPrice & ", " & objMod.OtherCharges & ", " & objMod.CurrencyId & ", " & objMod.CurrencyRate & ", '" & objMod.CurrencySymbol.Replace("'", "''") & "',N'" & objMod.Comments & "',N'" & objMod.RequirementDescription & "')" _
                    & " Else Update InquiryComparisonStatement SET VendorQuotationDetailId= " & objMod.VendorQuotationDetailId & ", VendorId = " & objMod.VendorId & ", PurchaseInuiryId= " & objMod.PurchaseInuiryId & ", PurchaseInquiryDetailId= " & IIf(objMod.PurchaseInquiryDetailId = 0, "NULL", objMod.PurchaseInquiryDetailId) & ", NetCostValue= " & objMod.NetCostValue & ", Margin= " & objMod.Margin & ", Approved= " & IIf(objMod.Approved = True, 1, 0) & ", UserName= '" & objMod.UserName.Replace("'", "''") & "', Dated= '" & objMod.Dated.ToString("yyyy-M-dd hh:mm:ss tt") & "', HeadArticleId = " & objMod.HeadArticleId & ", Qty = " & objMod.Qty & " , Price = " & objMod.Price & ", DiscountPer = " & objMod.DiscountPer & " , SalesTaxPer = " & objMod.SalesTaxPer & ", AddTaxPer = " & objMod.AddTaxPer & ", IncTaxPer = " & objMod.IncTaxPer & ", CDPer = " & objMod.CDPer & ", NetPrice = " & objMod.NetPrice & ", OtherCharges = " & objMod.OtherCharges & ", CurrencyId = " & objMod.CurrencyId & ", CurrencyRate = " & objMod.CurrencyRate & ", CurrencySymbol = '" & objMod.CurrencySymbol.Replace("'", "''") & "', Comments = N'" & objMod.Comments & "', RequirementDescription = N'" & objMod.RequirementDescription & "' WHERE InquiryComparisonStatementId=" & objMod.InquiryComparisonStatementId & " SELECT @@IDENTITY"
                    'Ali Faisal : TFS1355 : End
                    Dim InquiryComparisonId As Integer = SQLHelper.ExecuteScaler(trans, CommandType.Text, strSQL)
                    trans.Commit()
                    Dim ValueTable As DataTable = GetSingle(InquiryComparisonId)
                    NotificationDAL.SaveAndSendNotification("Inquiry Comparison Statement", "InquiryComparisonStatement", InquiryComparisonId, ValueTable, "Purchase > Inquiry Comparison Statement")
                Catch ex As Exception
                    trans.Rollback()
                End Try
            Next
            Return True
        Catch ex As Exception
            'trans.Rollback()
            Throw ex
        Finally
            Con.Close()
        End Try
    End Function
    Public Function AddSingle(ByVal obj As List(Of InquiryComparisonStatement)) As Boolean
        Dim Con As New SqlConnection(SQLHelper.CON_STR)
        If Con.State = ConnectionState.Closed Then Con.Open()
        Dim trans As SqlTransaction = Con.BeginTransaction
        Try
            For Each objMod As InquiryComparisonStatement In obj
                Dim strSQL As String = String.Empty
                strSQL = "If Not Exists(Select InquiryComparisonStatementId FROM InquiryComparisonStatement Where InquiryComparisonStatementId =" & objMod.InquiryComparisonStatementId & ") INSERT INTO VendorQuotationDetail(VendorQuotationDetailId, VendorId, PurchaseInuiryId, PurchaseInquiryDetailId, NetCostValue, Margin, QuotedCostValue, Approved, UserName, Dated, HeadArticleId, Qty, Price, DiscountPer, SalesTaxPer, AddTaxPer, IncTaxPer, CDPer, NetPrice, OtherCharges, CurrencyId, CurrencyRate, CurrencySymbol) " _
                & " VALUES(" & objMod.VendorQuotationDetailId & ", " & objMod.VendorId & ", " & objMod.PurchaseInuiryId & ", " & objMod.PurchaseInquiryDetailId & ", " & objMod.NetCostValue & ", " & objMod.Margin & ", " & objMod.QuotedCostValue & ", " & IIf(objMod.Approved = True, 1, 0) & ", '" & objMod.UserName.Replace("'", "''") & "', '" & objMod.Dated.ToString("yyyy-M-dd hh:mm:ss tt") & "', " & objMod.HeadArticleId & ", " & objMod.Qty & ", " & objMod.Price & ", " & objMod.DiscountPer & ", " & objMod.SalesTaxPer & ", " & objMod.AddTaxPer & ", " & objMod.IncTaxPer & ", " & objMod.CDPer & ", " & objMod.NetPrice & ", " & objMod.OtherCharges & ", " & objMod.CurrencyId & ", " & objMod.CurrencyRate & ", '" & objMod.CurrencySymbol.Replace("'", "''") & "')" _
                & " Else Update InquiryComparisonStatement SET VendorQuotationDetailId= " & objMod.VendorQuotationDetailId & ", VendorId = " & objMod.VendorId & ", PurchaseInuiryId= " & objMod.PurchaseInuiryId & ", PurchaseInquiryDetailId= " & objMod.PurchaseInquiryDetailId & ", NetCostValue= " & objMod.NetCostValue & ", Margin= " & objMod.Margin & ", Approved= " & IIf(objMod.Approved = True, 1, 0) & ", UserName = '" & objMod.UserName.Replace("'", "''") & "', Dated = '" & objMod.Dated.ToString("yyyy-M-dd hh:mm:ss tt") & "', HeadArtilceId =" & objMod.HeadArticleId & ", Qty = " & objMod.Qty & " , Price = " & objMod.Price & ", DiscountPer = " & objMod.DiscountPer & " , SalesTaxPer = " & objMod.SalesTaxPer & ", AddTaxPer = " & objMod.AddTaxPer & ", IncTaxPer = " & objMod.IncTaxPer & ", CDPer = " & objMod.CDPer & ", NetPrice = " & objMod.NetPrice & ", OtherCharges = " & objMod.OtherCharges & ", CurrencyId = " & objMod.CurrencyId & ", CurrencyRate = " & objMod.CurrencyRate & ", CurrenySymbol = '" & objMod.CurrencySymbol.Replace("'", "''") & "' WHERE InquiryComparisonStatementId=" & objMod.InquiryComparisonStatementId & ""
                SQLHelper.ExecuteNonQuery(trans, CommandType.Text, strSQL)
            Next
            trans.Commit()
            Return True
        Catch ex As Exception
            trans.Rollback()
            Throw ex
        Finally
            Con.Close()
        End Try
    End Function
    Public Function DisplayDetail(ByVal VendorId As Integer, ByVal PurchaseInquiryId As Integer, ByVal FromDate As DateTime, ByVal ToDate As DateTime) As DataTable
        Dim strSQL As String = String.Empty
        Try
            'strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(PurchaseInquiryDetail.PurchaseInquiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail Inner Join VendorQuotationMaster ON Detail.VendorQuotationId = VendorQuotationMaster.VendorQuotationId Inner Join PurchaseInquiryDetail ON Case When Detail.PurchaseInquiryDetailId Is Null Then Detail.HeadArticleId Else Detail.PurchaseInquiryDetailId End = PurchaseInquiryDetail.PurchaseInquiryDetailId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id Left Outer Join PurchaseInquiryMaster ON VendorQuotationMaster.PurchaseInquiryId = PurchaseInquiryMaster.PurchaseInquiryId Left Outer Join InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where IsNull(Detail.Qty, 0) > 0 And IsNull(ComparisonStatement.Approved, 0) = 0"
            'strSQL = "SELECT ISNULL(Detail.VendorQuotationDetailId, 0) AS VendorQuotationDetailId, ISNULL(Detail.VendorQuotationId, 0) AS VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code AS VendorCode, COA.detail_title AS Vendor, Detail.RequirementDescription, Detail.ArticleId, Article.ArticleCode AS Code, Article.ArticleDescription, ISNULL(Detail.UnitId, 0) AS UnitId, Unit.ArticleUnitName AS Unit, ISNULL(Detail.ItemTypeId, 0) AS ItemTypeId, Type.ArticleTypeName AS Type, ISNULL(Detail.CategoryId, 0) AS CategoryId, Category.ArticleCompanyName AS Category, ISNULL(Detail.SubCategoryId, 0) AS SubCategoryId, SubCategory.ArticleLpoName AS SubCategory, ISNULL(Detail.OriginId, 0) AS OriginId, Origin.ArticleGenderName AS Origin, ISNULL(Detail.Qty, 0) AS Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, ISNULL(Detail.BaseCurrencyId, 0) AS BaseCurrencyId, ISNULL(Detail.BaseCurrencyRate, 0) AS BaseCurrencyRate, ISNULL(Detail.CurrencyId, 0) AS CurrencyId, tblcurrency.currency_code AS Currency, ISNULL(Detail.CurrencyRate, 0) AS CurrencyRate, Detail.CurrencySymbol, ISNULL(Detail.Price, 0) AS Price, ISNULL(Detail.DiscountPer, 0) AS DiscountPer, CONVERT(float, 0) AS DiscountAmount, ISNULL(Detail.SalesTaxPer, 0) AS SalesTaxPer, CONVERT(float, 0) AS SalesTaxAmount, ISNULL(Detail.AddTaxPer, 0) AS AddTaxPer, CONVERT(float, 0) AS AddTaxAmount, ISNULL(Detail.IncTaxPer, 0) AS IncTaxPer, CONVERT(float, 0) AS IncTaxAmount, ISNULL(Detail.CDPer, 0) AS CDPer, CONVERT(float, 0) AS CDAmount, ISNULL(Detail.NetPrice, 0) AS NetPrice, ISNULL(Detail.NetPrice, 0) * ISNULL(Detail.Qty, 0) AS Amount, ISNULL(Detail.OtherCharges, 0) AS OtherCharges, CONVERT(float, 0) AS NetCostValue, ISNULL(ComparisonStatement.Margin, 0) AS Margin, ISNULL(ComparisonStatement.QuotedCostValue, 0) AS QuotedCostValue, ISNULL(VendorQuotationMaster.PurchaseInquiryId, 0) AS PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, ISNULL(Detail.HeadArticleId, 0) AS HeadArticleId, ISNULL(Detail.Alternate, 0) AS Alternate, CONVERT(Bit, ISNULL(ComparisonStatement.Approved, 0)) AS Approved, ISNULL(ComparisonStatement.InquiryComparisonStatementId, 0) AS InquiryComparisonStatementId FROM ArticleCompanyDefTable AS Category RIGHT OUTER JOIN PurchaseInquiryMaster INNER JOIN VendorQuotationDetail AS Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId = VendorQuotationMaster.VendorQuotationId ON PurchaseInquiryMaster.PurchaseInquiryId = VendorQuotationMaster.PurchaseInquiryId LEFT OUTER JOIN vwCOADetail AS COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id LEFT OUTER JOIN InquiryComparisonStatement AS ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId LEFT OUTER JOIN ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT OUTER JOIN ArticleUnitDefTable AS Unit ON Detail.UnitId = Unit.ArticleUnitId LEFT OUTER JOIN ArticleTypeDefTable AS Type ON Detail.ItemTypeId = Type.ArticleTypeId ON Category.ArticleCompanyId = Detail.CategoryId LEFT OUTER JOIN ArticleLpoDefTable AS SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT OUTER JOIN ArticleGenderDefTable AS Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where IsNull(Detail.Qty, 0) > 0 And IsNull(ComparisonStatement.Approved, 0) = 0 "
            strSQL = "SELECT ISNULL(Detail.VendorQuotationDetailId, 0) AS VendorQuotationDetailId, ISNULL(Detail.VendorQuotationId, 0) AS VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code AS VendorCode, COA.detail_title AS Vendor, Detail.RequirementDescription, Detail.ArticleId, Article.ArticleCode AS Code, Article.ArticleDescription, ISNULL(Detail.UnitId, 0) AS UnitId, Unit.ArticleUnitName AS Unit, ISNULL(Detail.ItemTypeId, 0) AS ItemTypeId, Type.ArticleTypeName AS Type, ISNULL(Detail.CategoryId, 0) AS CategoryId, Category.ArticleCompanyName AS Category, ISNULL(Detail.SubCategoryId, 0) AS SubCategoryId, SubCategory.ArticleLpoName AS SubCategory, ISNULL(Detail.OriginId, 0) AS OriginId, Origin.ArticleGenderName AS Origin, ISNULL(Detail.Qty, 0) AS Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, ISNULL(Detail.BaseCurrencyId, 0) AS BaseCurrencyId, ISNULL(Detail.BaseCurrencyRate, 0) AS BaseCurrencyRate, ISNULL(Detail.CurrencyId, 0) AS CurrencyId, tblcurrency.currency_code AS Currency, ISNULL(Detail.CurrencyRate, 0) AS CurrencyRate, Detail.CurrencySymbol, ISNULL(Detail.Price, 0) AS Price, ISNULL(Detail.DiscountPer, 0) AS DiscountPer, CONVERT(float, 0) AS DiscountAmount, ISNULL(Detail.SalesTaxPer, 0) AS SalesTaxPer, CONVERT(float, 0) AS SalesTaxAmount, ISNULL(Detail.AddTaxPer, 0) AS AddTaxPer, CONVERT(float, 0) AS AddTaxAmount, ISNULL(Detail.IncTaxPer, 0) AS IncTaxPer, CONVERT(float, 0) AS IncTaxAmount, ISNULL(Detail.CDPer, 0) AS CDPer, CONVERT(float, 0) AS CDAmount, ISNULL(Detail.NetPrice, 0) AS NetPrice, ISNULL(Detail.NetPrice, 0) * ISNULL(Detail.Qty, 0) AS Amount, ISNULL(Detail.OtherCharges, 0) AS OtherCharges, CONVERT(float, 0) AS NetCostValue, ISNULL(ComparisonStatement.Margin, 0) AS Margin, ISNULL(ComparisonStatement.QuotedCostValue, 0) AS QuotedCostValue, ISNULL(VendorQuotationMaster.PurchaseInquiryId, 0) AS PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, ISNULL(Detail.HeadArticleId, 0) AS HeadArticleId, ISNULL(Detail.Alternate, 0) AS Alternate, CONVERT(Bit, ISNULL(ComparisonStatement.Approved, 0)) AS Approved, ISNULL(ComparisonStatement.InquiryComparisonStatementId, 0) AS InquiryComparisonStatementId FROM ArticleCompanyDefTable AS Category RIGHT OUTER JOIN PurchaseInquiryMaster INNER JOIN VendorQuotationDetail AS Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId = VendorQuotationMaster.VendorQuotationId ON PurchaseInquiryMaster.PurchaseInquiryId = VendorQuotationMaster.PurchaseInquiryId INNER JOIN (SELECT SalesInquiryId, Status FROM SalesInquiryRights GROUP BY SalesInquiryId,Status)SalesInquiryRights ON PurchaseInquiryMaster.SalesInquiryId = SalesInquiryRights.SalesInquiryId LEFT OUTER JOIN vwCOADetail AS COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id LEFT OUTER JOIN InquiryComparisonStatement AS ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId LEFT OUTER JOIN ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT OUTER JOIN ArticleUnitDefTable AS Unit ON Detail.UnitId = Unit.ArticleUnitId LEFT OUTER JOIN ArticleTypeDefTable AS Type ON Detail.ItemTypeId = Type.ArticleTypeId ON Category.ArticleCompanyId = Detail.CategoryId LEFT OUTER JOIN ArticleLpoDefTable AS SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT OUTER JOIN ArticleGenderDefTable AS Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where IsNull(Detail.Qty, 0) > 0 And IsNull(ComparisonStatement.Approved, 0) = 0  "  ' Commented Agianst Task 3285 AND Detail.StatusId = 2
            If VendorId > 0 Then
                strSQL += " And VendorQuotationMaster.VendorId = " & VendorId & ""
            End If
            If PurchaseInquiryId > 0 Then
                strSQL += " And VendorQuotationMaster.PurchaseInquiryId = " & PurchaseInquiryId & ""
            End If
            If Not FromDate = DateTime.MinValue Then
                strSQL += " And VendorQuotationMaster.VendorQuotationDate >= Convert(DateTime, '" & FromDate.ToString("yyyy-M-dd 00:00:00") & "', 102)"
            End If
            If Not ToDate = DateTime.MinValue Then
                strSQL += " And VendorQuotationMaster.VendorQuotationDate <= Convert(DateTime, '" & ToDate.ToString("yyyy-M-dd 23:59:59") & "', 102)"
            End If
            ''Start TFS3694 : Ayesha Rehman : 28-06-2018
            strSQL += " Order By CAST(Detail.SerialNo AS Numeric(10,0)) Asc "
            ''End TFS3694

            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable(strSQL)
            'dt.AcceptChanges()
            'Detail.DiscountPer, Convert(float, 0) As DiscountAmount,  Detail.SalesTaxPer, Convert(float, 0) As SalesTaxAmount, Detail.AddTaxPer,  Convert(float, 0) As AddTaxAmount, Detail.IncTaxPer,  Convert(float, 0) As IncTaxAmount, Detail.CDPer, Convert(float, 0) As CDAmount,  Detail.NetPrice, Convert(float, 0) As Amount,  Detail.OtherCharges, Convert(float, 0) As NetCostValue
            dt.Columns("DiscountAmount").Expression = "(IsNull(Price, 0)*IsNull(DiscountPer, 0))/100"
            dt.Columns("SalesTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(SalesTaxPer, 0))/100"
            dt.Columns("AddTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(AddTaxPer, 0))/100"
            dt.Columns("IncTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(IncTaxPer, 0))/100"
            dt.Columns("CDAmount").Expression = "(IsNull(Price, 0)*IsNull(CDPer, 0))/100"
            dt.Columns("NetPrice").Expression = "(IsNull(Price, 0)-DiscountAmount)+SalesTaxAmount+AddTaxAmount+IncTaxAmount+CDAmount"
            'dt.Columns("Amount").Expression = "(IsNull(NetPrice, 0)*IsNull(Qty, 0))"
            'dt.Columns("NetCostValue").Expression = "(IsNull(Amount, 0)+IsNull(OtherCharges, 0))"
            dt.Columns("NetCostValue").Expression = "IsNull(Amount, 0)"
            dt.Columns("QuotedCostValue").Expression = "(IsNull(NetCostValue, 0) + (IsNull(NetCostValue, 0)* IsNull(Margin, 0))/100)"
            Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function GetAllRecords() As DataTable
        Dim strSQL As String = String.Empty
        Try
            'strSQL = "SELECT IsNull(Detail.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId,  IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId, Detail.Dated, VendorQuotationDetail.RequirementDescription, VendorQuotationDetail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription, Detail.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, IsNull(Detail.PurchaseInuiryId, 0) As PurchaseInquiryId, IsNull(Detail.PurchaseInquiryDetailId, 0) As PurchaseInquiryDetailId,  IsNull(Detail.NetCostValue, 0) As NetCostValue, IsNull(Detail.Margin, 0) As Margin,  IsNull(Detail.QuotedCostValue, 0) As QuotedCostValue, PurchaseInquiry.CustomerId, PurchaseInquiry.Customer, PurchaseInquiry.Email, Detail.UserName As UserName, Convert(Bit, IsNull(Detail.Approved, 0)) As Approved, IsNull(Detail.HeadArticleId, 0) As HeadArticleId FROM InquiryComparisonStatement As Detail LEFT OUTER JOIN  vwCOADetail As COA ON Detail.VendorId = COA.coa_detail_id LEFT OUTER JOIN VendorQuotationDetail ON Detail.VendorQuotationDetailId = VendorQuotationDetail.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON VendorQuotationDetail.ArticleId = Article.ArticleId LEFT OUTER JOIN(Select PurchaseInquiryDetail.PurchaseInquiryDetailId, SalesInquiryMaster.CustomerId, COA.detail_code As VendorCode, COA.detail_title As Customer, COA.Contact_Email As Email FROM PurchaseInquiryDetail INNER JOIN SalesInquiryMaster ON PurchaseInquiryDetail.SalesInquiryId = SalesInquiryMaster.SalesInquiryId LEFT OUTER JOIN  vwCOADetail As COA ON SalesInquiryMaster.CustomerId = COA.coa_detail_id) As PurchaseInquiry ON Case When Detail.PurchaseInquiryDetailId Is Null Then Detail.HeadArticleId Else Detail.PurchaseInquiryDetailId End  = PurchaseInquiry.PurchaseInquiryDetailId  "
            'strSQL = "SELECT IsNull(Detail.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId,  IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId, Detail.Dated, VendorQuotationDetail.RequirementDescription, VendorQuotationDetail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription, Detail.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, IsNull(Detail.PurchaseInuiryId, 0) As PurchaseInquiryId, IsNull(Detail.PurchaseInquiryDetailId, 0) As PurchaseInquiryDetailId,  IsNull(Detail.NetCostValue, 0) As NetCostValue, IsNull(Detail.Margin, 0) As Margin,  IsNull(Detail.QuotedCostValue, 0) As QuotedCostValue, PurchaseInquiry.CustomerId, PurchaseInquiry.Customer, PurchaseInquiry.Email, Detail.UserName As UserName, Convert(Bit, IsNull(Detail.Approved, 0)) As Approved, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(VendorQuotationDetail.VendorQuotationId, 0) As VendorQuotationId FROM InquiryComparisonStatement As Detail LEFT OUTER JOIN  vwCOADetail As COA ON Detail.VendorId = COA.coa_detail_id LEFT OUTER JOIN VendorQuotationDetail ON Detail.VendorQuotationDetailId = VendorQuotationDetail.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON VendorQuotationDetail.ArticleId = Article.ArticleId LEFT OUTER JOIN(Select PurchaseInquiryDetail.PurchaseInquiryDetailId, SalesInquiryMaster.CustomerId, COA.detail_code As VendorCode, COA.detail_title As Customer, COA.Contact_Email As Email FROM PurchaseInquiryDetail INNER JOIN SalesInquiryMaster ON PurchaseInquiryDetail.SalesInquiryId = SalesInquiryMaster.SalesInquiryId LEFT OUTER JOIN  vwCOADetail As COA ON SalesInquiryMaster.CustomerId = COA.coa_detail_id) As PurchaseInquiry ON Detail.PurchaseInquiryDetailId = PurchaseInquiry.PurchaseInquiryDetailId Where Detail.HeadArticleId =0  "
            'strSQL = "SELECT IsNull(Detail.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId,  IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId, Detail.Dated, Detail.RequirementDescription, VendorQuotationDetail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription, Detail.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, IsNull(Detail.PurchaseInuiryId, 0) As PurchaseInquiryId, IsNull(Detail.PurchaseInquiryDetailId, 0) As PurchaseInquiryDetailId,  IsNull(Detail.NetCostValue, 0) As NetCostValue, IsNull(Detail.Margin, 0) As Margin,  IsNull(Detail.QuotedCostValue, 0) As QuotedCostValue, PurchaseInquiry.CustomerId, PurchaseInquiry.Customer, PurchaseInquiry.Email, Detail.UserName As UserName, Att.[No Of Attachment], Convert(Bit, IsNull(Detail.Approved, 0)) As Approved, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(VendorQuotationDetail.VendorQuotationId, 0) As VendorQuotationId, CONVERT(bit, ISNULL(VendorQuotationDetail.Alternate, 0)) AS Alternate FROM InquiryComparisonStatement As Detail LEFT OUTER JOIN  vwCOADetail As COA ON Detail.VendorId = COA.coa_detail_id LEFT OUTER JOIN VendorQuotationDetail ON Detail.VendorQuotationDetailId = VendorQuotationDetail.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON VendorQuotationDetail.ArticleId = Article.ArticleId LEFT OUTER JOIN(Select PurchaseInquiryDetail.PurchaseInquiryDetailId, SalesInquiryMaster.CustomerId, COA.detail_code As VendorCode, COA.detail_title As Customer, COA.Contact_Email As Email FROM PurchaseInquiryDetail INNER JOIN SalesInquiryMaster ON PurchaseInquiryDetail.SalesInquiryId = SalesInquiryMaster.SalesInquiryId LEFT OUTER JOIN  vwCOADetail As COA ON SalesInquiryMaster.CustomerId = COA.coa_detail_id) As PurchaseInquiry ON Detail.PurchaseInquiryDetailId = PurchaseInquiry.PurchaseInquiryDetailId LEFT OUTER JOIN(Select Count(*) as [No Of Attachment], DocId From DocumentAttachment WHERE Source='frmVendorQuotation' Group By DocId) Att On Att.DocId=  VendorQuotationDetail.VendorQuotationId Where Detail.HeadArticleId =0   ORDER BY Detail.Dated DESC"
            'Ali Faisal : TFS2046 : Add Sales Inquiry Id in History grid
            strSQL = "SELECT IsNull(Detail.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId,  IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId, Detail.Dated, Detail.RequirementDescription, VendorQuotationDetail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription, Detail.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, IsNull(Detail.PurchaseInuiryId, 0) As PurchaseInquiryId, IsNull(Detail.PurchaseInquiryDetailId, 0) As PurchaseInquiryDetailId,  IsNull(Detail.NetCostValue, 0) As NetCostValue, IsNull(Detail.Margin, 0) As Margin,  IsNull(Detail.QuotedCostValue, 0) As QuotedCostValue, PurchaseInquiry.CustomerId, PurchaseInquiry.Customer, PurchaseInquiry.Email, Detail.UserName As UserName, Att.[No Of Attachment], Convert(Bit, IsNull(Detail.Approved, 0)) As Approved, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(VendorQuotationDetail.VendorQuotationId, 0) As VendorQuotationId, CONVERT(bit, ISNULL(VendorQuotationDetail.Alternate, 0)) AS Alternate, ISNULL(PurchaseInquiry.SalesInquiryId,0) SalesInquiryId, ISNULL(PurchaseInquiry.SalesInquiryNo,0) SalesInquiryNo FROM InquiryComparisonStatement As Detail LEFT OUTER JOIN  vwCOADetail As COA ON Detail.VendorId = COA.coa_detail_id LEFT OUTER JOIN VendorQuotationDetail ON Detail.VendorQuotationDetailId = VendorQuotationDetail.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON VendorQuotationDetail.ArticleId = Article.ArticleId LEFT OUTER JOIN(Select PurchaseInquiryDetail.PurchaseInquiryDetailId, SalesInquiryMaster.CustomerId, COA.detail_code As VendorCode, COA.detail_title As Customer, COA.Contact_Email As Email, SalesInquiryMaster.SalesInquiryId, SalesInquiryMaster.SalesInquiryNo FROM PurchaseInquiryDetail INNER JOIN SalesInquiryMaster ON PurchaseInquiryDetail.SalesInquiryId = SalesInquiryMaster.SalesInquiryId LEFT OUTER JOIN  vwCOADetail As COA ON SalesInquiryMaster.CustomerId = COA.coa_detail_id) As PurchaseInquiry ON Detail.PurchaseInquiryDetailId = PurchaseInquiry.PurchaseInquiryDetailId LEFT OUTER JOIN(Select Count(*) as [No Of Attachment], DocId From DocumentAttachment WHERE Source='frmVendorQuotation' Group By DocId) Att On Att.DocId=  VendorQuotationDetail.VendorQuotationId Where Detail.HeadArticleId =0   ORDER BY Detail.Dated DESC"
            'Ali Faisal : TFS2046 : End

            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable(strSQL)
            Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function GetSingle(ByVal InquiryComparisonId As Integer) As DataTable
        Dim strSQL As String = String.Empty
        Try
            'strSQL = "SELECT IsNull(Detail.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId,  IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId, Detail.Dated, VendorQuotationDetail.RequirementDescription, VendorQuotationDetail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription, Detail.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, IsNull(Detail.PurchaseInuiryId, 0) As PurchaseInquiryId, IsNull(Detail.PurchaseInquiryDetailId, 0) As PurchaseInquiryDetailId,  IsNull(Detail.NetCostValue, 0) As NetCostValue, IsNull(Detail.Margin, 0) As Margin,  IsNull(Detail.QuotedCostValue, 0) As QuotedCostValue, PurchaseInquiry.CustomerId, PurchaseInquiry.Customer, PurchaseInquiry.Email, Detail.UserName As UserName, Convert(Bit, IsNull(Detail.Approved, 0)) As Approved, IsNull(Detail.HeadArticleId, 0) As HeadArticleId FROM InquiryComparisonStatement As Detail LEFT OUTER JOIN  vwCOADetail As COA ON Detail.VendorId = COA.coa_detail_id LEFT OUTER JOIN VendorQuotationDetail ON Detail.VendorQuotationDetailId = VendorQuotationDetail.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON VendorQuotationDetail.ArticleId = Article.ArticleId LEFT OUTER JOIN(Select PurchaseInquiryDetail.PurchaseInquiryDetailId, SalesInquiryMaster.CustomerId, COA.detail_code As VendorCode, COA.detail_title As Customer, COA.Contact_Email As Email FROM PurchaseInquiryDetail INNER JOIN SalesInquiryMaster ON PurchaseInquiryDetail.SalesInquiryId = SalesInquiryMaster.SalesInquiryId LEFT OUTER JOIN  vwCOADetail As COA ON SalesInquiryMaster.CustomerId = COA.coa_detail_id) As PurchaseInquiry ON Case When Detail.PurchaseInquiryDetailId Is Null Then Detail.HeadArticleId Else Detail.PurchaseInquiryDetailId End  = PurchaseInquiry.PurchaseInquiryDetailId  "
            'strSQL = "SELECT IsNull(Detail.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId,  IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId, Detail.Dated, VendorQuotationDetail.RequirementDescription, VendorQuotationDetail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription, Detail.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, IsNull(Detail.PurchaseInuiryId, 0) As PurchaseInquiryId, IsNull(Detail.PurchaseInquiryDetailId, 0) As PurchaseInquiryDetailId,  IsNull(Detail.NetCostValue, 0) As NetCostValue, IsNull(Detail.Margin, 0) As Margin,  IsNull(Detail.QuotedCostValue, 0) As QuotedCostValue, PurchaseInquiry.CustomerId, PurchaseInquiry.Customer, PurchaseInquiry.Email, Detail.UserName As UserName, Convert(Bit, IsNull(Detail.Approved, 0)) As Approved, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(VendorQuotationDetail.VendorQuotationId, 0) As VendorQuotationId FROM InquiryComparisonStatement As Detail LEFT OUTER JOIN  vwCOADetail As COA ON Detail.VendorId = COA.coa_detail_id LEFT OUTER JOIN VendorQuotationDetail ON Detail.VendorQuotationDetailId = VendorQuotationDetail.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON VendorQuotationDetail.ArticleId = Article.ArticleId LEFT OUTER JOIN(Select PurchaseInquiryDetail.PurchaseInquiryDetailId, SalesInquiryMaster.CustomerId, COA.detail_code As VendorCode, COA.detail_title As Customer, COA.Contact_Email As Email FROM PurchaseInquiryDetail INNER JOIN SalesInquiryMaster ON PurchaseInquiryDetail.SalesInquiryId = SalesInquiryMaster.SalesInquiryId LEFT OUTER JOIN  vwCOADetail As COA ON SalesInquiryMaster.CustomerId = COA.coa_detail_id) As PurchaseInquiry ON Detail.PurchaseInquiryDetailId = PurchaseInquiry.PurchaseInquiryDetailId Where Detail.HeadArticleId =0  "
            strSQL = "SELECT IsNull(Detail.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId,  IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId, Detail.Dated, Detail.RequirementDescription, VendorQuotationDetail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription, Detail.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, IsNull(Detail.PurchaseInuiryId, 0) As PurchaseInquiryId, IsNull(Detail.PurchaseInquiryDetailId, 0) As PurchaseInquiryDetailId,  IsNull(Detail.NetCostValue, 0) As NetCostValue, IsNull(Detail.Margin, 0) As Margin,  IsNull(Detail.QuotedCostValue, 0) As QuotedCostValue, PurchaseInquiry.CustomerId, PurchaseInquiry.Customer, PurchaseInquiry.Email, Detail.UserName As UserName, Convert(Bit, IsNull(Detail.Approved, 0)) As Approved, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(VendorQuotationDetail.VendorQuotationId, 0) As VendorQuotationId FROM InquiryComparisonStatement As Detail LEFT OUTER JOIN  vwCOADetail As COA ON Detail.VendorId = COA.coa_detail_id LEFT OUTER JOIN VendorQuotationDetail ON Detail.VendorQuotationDetailId = VendorQuotationDetail.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON VendorQuotationDetail.ArticleId = Article.ArticleId LEFT OUTER JOIN(Select PurchaseInquiryDetail.PurchaseInquiryDetailId, SalesInquiryMaster.CustomerId, COA.detail_code As VendorCode, COA.detail_title As Customer, COA.Contact_Email As Email FROM PurchaseInquiryDetail INNER JOIN SalesInquiryMaster ON PurchaseInquiryDetail.SalesInquiryId = SalesInquiryMaster.SalesInquiryId LEFT OUTER JOIN  vwCOADetail As COA ON SalesInquiryMaster.CustomerId = COA.coa_detail_id) As PurchaseInquiry ON Detail.PurchaseInquiryDetailId = PurchaseInquiry.PurchaseInquiryDetailId Where Detail.InquiryComparisonStatementId =" & InquiryComparisonId & ""

            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable(strSQL)
            Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function EditRecord(ByVal InquiryComparisonStatementId As Integer) As DataTable
        Dim strSQL As String = String.Empty
        Try
            'strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(ComparisonStatement.PurchaseInuiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, Detail.HeadArticleId As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail Inner Join VendorQuotationMaster ON Detail.VendorQuotationId = VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id Inner Join InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId And Case When Detail.PurchaseInquiryDetailId Is Null Then Detail.HeadArticleId Else Detail.PurchaseInquiryDetailId End = Case When ComparisonStatement.PurchaseInquiryDetailId Is Null Then ComparisonStatement.HeadArticleId Else ComparisonStatement.PurchaseInquiryDetailId End LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.InquiryComparisonStatementId =" & InquiryComparisonStatementId & " "
            'Ali Faisal : TFS1355 : Select comments from Comparison table
            strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, ComparisonStatement.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(ComparisonStatement.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(ComparisonStatement.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(ComparisonStatement.CurrencyRate, 0) As CurrencyRate, ComparisonStatement.CurrencySymbol, IsNull(ComparisonStatement.Price, 0) As Price, IsNull(ComparisonStatement.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(ComparisonStatement.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(ComparisonStatement.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(ComparisonStatement.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(ComparisonStatement.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(ComparisonStatement.NetPrice, 0) As NetPrice, (IsNull(ComparisonStatement.NetCostValue, 0) - IsNull(ComparisonStatement.OtherCharges, 0))  As Amount,  IsNull(ComparisonStatement.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(ComparisonStatement.PurchaseInuiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, ComparisonStatement.Comments, Detail.HeadArticleId As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail Inner Join VendorQuotationMaster ON Detail.VendorQuotationId = VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id Inner Join InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId And Case When Detail.PurchaseInquiryDetailId Is Null Then Detail.HeadArticleId Else Detail.PurchaseInquiryDetailId End = Case When ComparisonStatement.PurchaseInquiryDetailId Is Null Then ComparisonStatement.HeadArticleId Else ComparisonStatement.PurchaseInquiryDetailId End LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.InquiryComparisonStatementId =" & InquiryComparisonStatementId & " "
            'Ali Faisal : TFS1355 : End
            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable(strSQL)
            'dt.AcceptChanges()
            'Detail.DiscountPer, Convert(float, 0) As DiscountAmount,  Detail.SalesTaxPer, Convert(float, 0) As SalesTaxAmount, Detail.AddTaxPer,  Convert(float, 0) As AddTaxAmount, Detail.IncTaxPer,  Convert(float, 0) As IncTaxAmount, Detail.CDPer, Convert(float, 0) As CDAmount,  Detail.NetPrice, Convert(float, 0) As Amount,  Detail.OtherCharges, Convert(float, 0) As NetCostValue
            dt.Columns("DiscountAmount").Expression = "(IsNull(Price, 0)*IsNull(DiscountPer, 0))/100"
            dt.Columns("SalesTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(SalesTaxPer, 0))/100"
            dt.Columns("AddTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(AddTaxPer, 0))/100"
            dt.Columns("IncTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(IncTaxPer, 0))/100"
            dt.Columns("CDAmount").Expression = "(IsNull(Price, 0)*IsNull(CDPer, 0))/100"
            dt.Columns("NetPrice").Expression = "(IsNull(Price, 0)-DiscountAmount)+SalesTaxAmount+AddTaxAmount+IncTaxAmount+CDAmount"
            'dt.Columns("Amount").Expression = "(IsNull(NetPrice, 0)*IsNull(Qty, 0))"
            dt.Columns("NetCostValue").Expression = "(IsNull(Amount, 0)+IsNull(OtherCharges, 0))"
            dt.Columns("QuotedCostValue").Expression = "(IsNull(NetCostValue, 0) + (IsNull(NetCostValue, 0)* IsNull(Margin, 0))/100)"
            Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Function

    Public Function Delete(ByVal InquiryComparisonStatementId As Integer) As Boolean
        Dim Con As New SqlConnection(SQLHelper.CON_STR)
        If Con.State = ConnectionState.Closed Then Con.Open()
        Dim trans As SqlTransaction = Con.BeginTransaction
        Try
            Dim strSQL As String = String.Empty
            strSQL = "Delete From InquiryComparisonStatement WHERE InquiryComparisonStatementId=" & InquiryComparisonStatementId & ""
            SQLHelper.ExecuteNonQuery(trans, CommandType.Text, strSQL)
            trans.Commit()
            Return True
        Catch ex As Exception
            trans.Rollback()
            Throw ex
        Finally
            Con.Close()
        End Try
    End Function

    Public Function DeleteChild(ByVal HeadArticleId As Integer) As Boolean
        Dim Con As New SqlConnection(SQLHelper.CON_STR)
        If Con.State = ConnectionState.Closed Then Con.Open()
        Dim trans As SqlTransaction = Con.BeginTransaction
        Try
            Dim strSQL As String = String.Empty
            strSQL = "Delete From InquiryComparisonStatement WHERE HeadArticleId=" & HeadArticleId & ""
            SQLHelper.ExecuteNonQuery(trans, CommandType.Text, strSQL)
            trans.Commit()
            Return True
        Catch ex As Exception
            trans.Rollback()
            Throw ex
        Finally
            Con.Close()
        End Try
    End Function

    Public Function DeleteCharges(ByVal VendorQuotationDetailId As Integer) As Boolean
        Dim Con As New SqlConnection(SQLHelper.CON_STR)
        If Con.State = ConnectionState.Closed Then Con.Open()
        Dim trans As SqlTransaction = Con.BeginTransaction
        Try
            Dim strSQL As String = String.Empty
            strSQL = "Delete From VendorQuotationCharges WHERE VendorQuotationDetailId=" & VendorQuotationDetailId & ""
            SQLHelper.ExecuteNonQuery(trans, CommandType.Text, strSQL)
            trans.Commit()
            Return True
        Catch ex As Exception
            trans.Rollback()
            Throw ex
        Finally
            Con.Close()
        End Try
    End Function
    Public Function GetPurchaseInquiry(ByVal PurchaseInquiryDetailId As Integer) As DataTable
        Dim strSQL As String = String.Empty
        Try
            strSQL = " If Exists(Select PurchaseInquiryDetailId FROM InquiryComparisonStatement Where PurchaseInquiryDetailId =" & PurchaseInquiryDetailId & ") SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(ComparisonStatement.PurchaseInuiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, Detail.HeadArticleId As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail Inner Join VendorQuotationMaster ON Detail.VendorQuotationId = VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  Left Outer Join  PurchaseInquiryVendors ON COA.coa_detail_id = PurchaseInquiryVendors.VendorId Left Outer Join InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId And Case When Detail.PurchaseInquiryDetailId Is Null Then Detail.HeadArticleId Else Detail.PurchaseInquiryDetailId End = Case When ComparisonStatement.PurchaseInquiryDetailId Is Null Then ComparisonStatement.HeadArticleId Else ComparisonStatement.PurchaseInquiryDetailId End LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.PurchaseInquiryDetailId =" & PurchaseInquiryDetailId & " "
            '& " Else SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(ComparisonStatement.PurchaseInuiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, Detail.HeadArticleId As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail Inner Join VendorQuotationMaster ON Detail.VendorQuotationId = VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  Left Outer Join  PurchaseInquiryVendors ON COA.coa_detail_id = PurchaseInquiryVendors.VendorId Left Outer Join InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId And Case When Detail.PurchaseInquiryDetailId Is Null Then Detail.HeadArticleId Else Detail.PurchaseInquiryDetailId End = Case When ComparisonStatement.PurchaseInquiryDetailId Is Null Then ComparisonStatement.HeadArticleId Else ComparisonStatement.PurchaseInquiryDetailId End LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.HeadArticleId =" & PurchaseInquiryDetailId & ""
            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable(strSQL)
            strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(ComparisonStatement.PurchaseInuiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, Detail.HeadArticleId As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail Inner Join VendorQuotationMaster ON Detail.VendorQuotationId = VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  Left Outer Join  PurchaseInquiryVendors ON COA.coa_detail_id = PurchaseInquiryVendors.VendorId Left Outer Join InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId And Case When Detail.PurchaseInquiryDetailId Is Null Then Detail.HeadArticleId Else Detail.PurchaseInquiryDetailId End = Case When ComparisonStatement.PurchaseInquiryDetailId Is Null Then ComparisonStatement.HeadArticleId Else ComparisonStatement.PurchaseInquiryDetailId End LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.HeadArticleId =" & PurchaseInquiryDetailId & ""
            Dim dtChild As New DataTable
            dtChild = UtilityDAL.GetDataTable(strSQL)
            dt.Merge(dtChild)
            'dt.AcceptChanges()
            'Detail.DiscountPer, Convert(float, 0) As DiscountAmount,  Detail.SalesTaxPer, Convert(float, 0) As SalesTaxAmount, Detail.AddTaxPer,  Convert(float, 0) As AddTaxAmount, Detail.IncTaxPer,  Convert(float, 0) As IncTaxAmount, Detail.CDPer, Convert(float, 0) As CDAmount,  Detail.NetPrice, Convert(float, 0) As Amount,  Detail.OtherCharges, Convert(float, 0) As NetCostValue
            dt.Columns("DiscountAmount").Expression = "(IsNull(Price, 0)*IsNull(DiscountPer, 0))/100"
            dt.Columns("SalesTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(SalesTaxPer, 0))/100"
            dt.Columns("AddTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(AddTaxPer, 0))/100"
            dt.Columns("IncTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(IncTaxPer, 0))/100"
            dt.Columns("CDAmount").Expression = "(IsNull(Price, 0)*IsNull(CDPer, 0))/100"
            dt.Columns("NetPrice").Expression = "(IsNull(Price, 0)-DiscountAmount)+SalesTaxAmount+AddTaxAmount+IncTaxAmount+CDAmount"
            dt.Columns("Amount").Expression = "(IsNull(NetPrice, 0)*IsNull(Qty, 0))"
            dt.Columns("NetCostValue").Expression = "(IsNull(Amount, 0)+IsNull(OtherCharges, 0))"
            dt.Columns("QuotedCostValue").Expression = "(IsNull(NetCostValue, 0) + (IsNull(NetCostValue, 0)* IsNull(Margin, 0))/100)"
            Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function GetApprovedOnes(ByVal PurchaseInquiryDetailId As Integer, Optional ByVal ForHeadArticleId As Integer = 0) As DataTable
        Dim strSQL As String = String.Empty
        Try
            'strSQL = " SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(ComparisonStatement.PurchaseInuiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, Detail.HeadArticleId As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail Inner Join VendorQuotationMaster ON Detail.VendorQuotationId = VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  Left Outer Join  PurchaseInquiryVendors ON COA.coa_detail_id = PurchaseInquiryVendors.VendorId Left Outer Join InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId And Case When Detail.PurchaseInquiryDetailId Is Null Then Detail.HeadArticleId Else Detail.PurchaseInquiryDetailId End = Case When ComparisonStatement.PurchaseInquiryDetailId Is Null Then ComparisonStatement.HeadArticleId Else ComparisonStatement.PurchaseInquiryDetailId End LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.PurchaseInquiryDetailId =" & PurchaseInquiryDetailId & " "
            ''Commented on 09-03-2017 
            'strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(VendorQuotationMaster.PurchaseInquiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId= VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  INNER JOIN InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.PurchaseInquiryDetailId =" & PurchaseInquiryDetailId & ""
            strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, ComparisonStatement.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(ComparisonStatement.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(ComparisonStatement.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(ComparisonStatement.CurrencyRate, 0) As CurrencyRate, ComparisonStatement.CurrencySymbol, IsNull(ComparisonStatement.Price, 0) As Price, IsNull(ComparisonStatement.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(ComparisonStatement.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(ComparisonStatement.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(ComparisonStatement.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(ComparisonStatement.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(ComparisonStatement.NetPrice, 0) As NetPrice, (IsNull(ComparisonStatement.NetCostValue, 0) - IsNull(ComparisonStatement.OtherCharges, 0)) As Amount,  IsNull(ComparisonStatement.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(VendorQuotationMaster.PurchaseInquiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, ComparisonStatement.Comments, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId= VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  INNER JOIN InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON ComparisonStatement.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.InquiryComparisonStatementId =" & PurchaseInquiryDetailId & " AND Detail.Alternate = 0"

            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable(strSQL)
            ''Commented on 09-03-2017 
            'strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(VendorQuotationMaster.PurchaseInquiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId= VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  INNER JOIN InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.HeadArticleId =" & PurchaseInquiryDetailId & ""
            strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, ComparisonStatement.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(ComparisonStatement.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(ComparisonStatement.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(ComparisonStatement.CurrencyRate, 0) As CurrencyRate, ComparisonStatement.CurrencySymbol, IsNull(ComparisonStatement.Price, 0) As Price, IsNull(ComparisonStatement.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(ComparisonStatement.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(ComparisonStatement.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(ComparisonStatement.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(ComparisonStatement.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(ComparisonStatement.NetPrice, 0) As NetPrice, (IsNull(ComparisonStatement.NetCostValue, 0) - IsNull(ComparisonStatement.OtherCharges, 0)) As Amount,  IsNull(ComparisonStatement.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(VendorQuotationMaster.PurchaseInquiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, ComparisonStatement.Comments, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId= VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  INNER JOIN InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON ComparisonStatement.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.HeadArticleId =" & ForHeadArticleId & ""

            Dim dtChild As New DataTable
            dtChild = UtilityDAL.GetDataTable(strSQL)
            dt.Merge(dtChild)
            'dt.AcceptChanges()
            'Detail.DiscountPer, Convert(float, 0) As DiscountAmount,  Detail.SalesTaxPer, Convert(float, 0) As SalesTaxAmount, Detail.AddTaxPer,  Convert(float, 0) As AddTaxAmount, Detail.IncTaxPer,  Convert(float, 0) As IncTaxAmount, Detail.CDPer, Convert(float, 0) As CDAmount,  Detail.NetPrice, Convert(float, 0) As Amount,  Detail.OtherCharges, Convert(float, 0) As NetCostValue
            dt.Columns("DiscountAmount").Expression = "(IsNull(Price, 0)*IsNull(DiscountPer, 0))/100"
            dt.Columns("SalesTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(SalesTaxPer, 0))/100"
            dt.Columns("AddTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(AddTaxPer, 0))/100"
            dt.Columns("IncTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(IncTaxPer, 0))/100"
            dt.Columns("CDAmount").Expression = "(IsNull(Price, 0)*IsNull(CDPer, 0))/100"
            dt.Columns("NetPrice").Expression = "(IsNull(Price, 0)-DiscountAmount)+SalesTaxAmount+AddTaxAmount+IncTaxAmount+CDAmount"
            'dt.Columns("Amount").Expression = "(IsNull(NetPrice, 0)*IsNull(Qty, 0))"
            dt.Columns("NetCostValue").Expression = "(IsNull(Amount, 0)+IsNull(OtherCharges, 0))"
            dt.Columns("QuotedCostValue").Expression = "(IsNull(NetCostValue, 0) + (IsNull(NetCostValue, 0)* IsNull(Margin, 0))/100)"
            Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function GetApprovedOnesAlternate(ByVal PurchaseInquiryDetailId As Integer) As DataTable
        Dim strSQL As String = String.Empty
        Try
            'strSQL = " SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(ComparisonStatement.PurchaseInuiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, Detail.HeadArticleId As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail Inner Join VendorQuotationMaster ON Detail.VendorQuotationId = VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  Left Outer Join  PurchaseInquiryVendors ON COA.coa_detail_id = PurchaseInquiryVendors.VendorId Left Outer Join InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId And Case When Detail.PurchaseInquiryDetailId Is Null Then Detail.HeadArticleId Else Detail.PurchaseInquiryDetailId End = Case When ComparisonStatement.PurchaseInquiryDetailId Is Null Then ComparisonStatement.HeadArticleId Else ComparisonStatement.PurchaseInquiryDetailId End LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.PurchaseInquiryDetailId =" & PurchaseInquiryDetailId & " "
            ''Commented on 09-03-2017 
            'strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(VendorQuotationMaster.PurchaseInquiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId= VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  INNER JOIN InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.PurchaseInquiryDetailId =" & PurchaseInquiryDetailId & ""
            strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, ComparisonStatement.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(ComparisonStatement.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(ComparisonStatement.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(ComparisonStatement.CurrencyRate, 0) As CurrencyRate, ComparisonStatement.CurrencySymbol, IsNull(ComparisonStatement.Price, 0) As Price, IsNull(ComparisonStatement.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(ComparisonStatement.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(ComparisonStatement.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(ComparisonStatement.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(ComparisonStatement.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(ComparisonStatement.NetPrice, 0) As NetPrice, (IsNull(ComparisonStatement.NetCostValue, 0) - IsNull(ComparisonStatement.OtherCharges, 0)) As Amount,  IsNull(ComparisonStatement.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(VendorQuotationMaster.PurchaseInquiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, ComparisonStatement.Comments, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId= VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  INNER JOIN InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON ComparisonStatement.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.PurchaseInquiryDetailId =" & PurchaseInquiryDetailId & " AND Detail.Alternate = 1"

            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable(strSQL)
            ''Commented on 09-03-2017 
            'strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(VendorQuotationMaster.PurchaseInquiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId= VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  INNER JOIN InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.HeadArticleId =" & PurchaseInquiryDetailId & ""
            strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, ComparisonStatement.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(ComparisonStatement.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(ComparisonStatement.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(ComparisonStatement.CurrencyRate, 0) As CurrencyRate, ComparisonStatement.CurrencySymbol, IsNull(ComparisonStatement.Price, 0) As Price, IsNull(ComparisonStatement.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(ComparisonStatement.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(ComparisonStatement.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(ComparisonStatement.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(ComparisonStatement.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(ComparisonStatement.NetPrice, 0) As NetPrice, (IsNull(ComparisonStatement.NetCostValue, 0) - IsNull(ComparisonStatement.OtherCharges, 0)) As Amount,  IsNull(ComparisonStatement.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(VendorQuotationMaster.PurchaseInquiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, ComparisonStatement.Comments, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId= VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  INNER JOIN InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON ComparisonStatement.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.HeadArticleId =" & PurchaseInquiryDetailId & ""

            Dim dtChild As New DataTable
            dtChild = UtilityDAL.GetDataTable(strSQL)
            dt.Merge(dtChild)
            'dt.AcceptChanges()
            'Detail.DiscountPer, Convert(float, 0) As DiscountAmount,  Detail.SalesTaxPer, Convert(float, 0) As SalesTaxAmount, Detail.AddTaxPer,  Convert(float, 0) As AddTaxAmount, Detail.IncTaxPer,  Convert(float, 0) As IncTaxAmount, Detail.CDPer, Convert(float, 0) As CDAmount,  Detail.NetPrice, Convert(float, 0) As Amount,  Detail.OtherCharges, Convert(float, 0) As NetCostValue
            dt.Columns("DiscountAmount").Expression = "(IsNull(Price, 0)*IsNull(DiscountPer, 0))/100"
            dt.Columns("SalesTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(SalesTaxPer, 0))/100"
            dt.Columns("AddTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(AddTaxPer, 0))/100"
            dt.Columns("IncTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(IncTaxPer, 0))/100"
            dt.Columns("CDAmount").Expression = "(IsNull(Price, 0)*IsNull(CDPer, 0))/100"
            dt.Columns("NetPrice").Expression = "(IsNull(Price, 0)-DiscountAmount)+SalesTaxAmount+AddTaxAmount+IncTaxAmount+CDAmount"
            'dt.Columns("Amount").Expression = "(IsNull(NetPrice, 0)*IsNull(Qty, 0))"
            dt.Columns("NetCostValue").Expression = "(IsNull(Amount, 0)+IsNull(OtherCharges, 0))"
            dt.Columns("QuotedCostValue").Expression = "(IsNull(NetCostValue, 0) + (IsNull(NetCostValue, 0)* IsNull(Margin, 0))/100)"
            Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function GetEmailWithAlternate(ByVal PurchaseInquiryDetailId As Integer) As DataTable
        Dim strSQL As String = String.Empty
        Try
            strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit, IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(ComparisonStatement.PurchaseInuiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, Detail.HeadArticleId As HeadArticleId, Case When IsNull(Detail.Alternate, 0) = 0 Then 'No' Else 'Yes' End As Alternate, Case When Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) = 0 Then 'No' Else 'Yes'  End As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail Inner Join VendorQuotationMaster ON Detail.VendorQuotationId = VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  Left Outer Join  PurchaseInquiryVendors ON COA.coa_detail_id = PurchaseInquiryVendors.VendorId Left Outer Join InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId And Case When Detail.PurchaseInquiryDetailId Is Null Then Detail.HeadArticleId Else Detail.PurchaseInquiryDetailId End = Case When ComparisonStatement.PurchaseInquiryDetailId Is Null Then ComparisonStatement.HeadArticleId Else ComparisonStatement.PurchaseInquiryDetailId End LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.PurchaseInquiryDetailId = " & PurchaseInquiryDetailId & ""
            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable(strSQL)

            strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit, IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(ComparisonStatement.PurchaseInuiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, Detail.HeadArticleId As HeadArticleId, Case When IsNull(Detail.Alternate, 0) = 0 Then 'No' Else 'Yes' End As Alternate, Case When Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) = 0 Then 'No' Else 'Yes'  End As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail Inner Join VendorQuotationMaster ON Detail.VendorQuotationId = VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  Left Outer Join  PurchaseInquiryVendors ON COA.coa_detail_id = PurchaseInquiryVendors.VendorId Left Outer Join InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId And Case When Detail.PurchaseInquiryDetailId Is Null Then Detail.HeadArticleId Else Detail.PurchaseInquiryDetailId End = Case When ComparisonStatement.PurchaseInquiryDetailId Is Null Then ComparisonStatement.HeadArticleId Else ComparisonStatement.PurchaseInquiryDetailId End LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where ComparisonStatement.HeadArticleId = " & PurchaseInquiryDetailId & ""
            Dim dtChild As New DataTable
            dtChild = UtilityDAL.GetDataTable(strSQL)
            dt.Merge(dtChild)
            'dt.AcceptChanges()
            'Detail.DiscountPer, Convert(float, 0) As DiscountAmount,  Detail.SalesTaxPer, Convert(float, 0) As SalesTaxAmount, Detail.AddTaxPer,  Convert(float, 0) As AddTaxAmount, Detail.IncTaxPer,  Convert(float, 0) As IncTaxAmount, Detail.CDPer, Convert(float, 0) As CDAmount,  Detail.NetPrice, Convert(float, 0) As Amount,  Detail.OtherCharges, Convert(float, 0) As NetCostValue
            dt.Columns("DiscountAmount").Expression = "(IsNull(Price, 0)*IsNull(DiscountPer, 0))/100"
            dt.Columns("SalesTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(SalesTaxPer, 0))/100"
            dt.Columns("AddTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(AddTaxPer, 0))/100"
            dt.Columns("IncTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(IncTaxPer, 0))/100"
            dt.Columns("CDAmount").Expression = "(IsNull(Price, 0)*IsNull(CDPer, 0))/100"
            dt.Columns("NetPrice").Expression = "(IsNull(Price, 0)-DiscountAmount)+SalesTaxAmount+AddTaxAmount+IncTaxAmount+CDAmount"
            dt.Columns("Amount").Expression = "(IsNull(NetPrice, 0)*IsNull(Qty, 0))"
            dt.Columns("NetCostValue").Expression = "(IsNull(Amount, 0)+IsNull(OtherCharges, 0))"
            dt.Columns("QuotedCostValue").Expression = "(IsNull(NetCostValue, 0) + (IsNull(NetCostValue, 0)* IsNull(Margin, 0))/100)"
            Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function EmailSalesQuotation(ByVal PurchaseInquiryDetailId As Integer) As DataTable
        Dim strSQL As String = String.Empty
        Try
            ''Commented on 09-03-2017
            'strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(VendorQuotationMaster.PurchaseInquiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId= VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  Left Outer Join InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId INNER JOIN QuotationDetailTable ON ComparisonStatement.PurchaseInquiryDetailId = QuotationDetailTable.PurchaseInquiryDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where IsNull(QuotationDetailTable.PurchaseInquiryDetailId, 0) =" & PurchaseInquiryDetailId & ""
            strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(ComparisonStatement.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(ComparisonStatement.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(ComparisonStatement.CurrencyRate, 0) As CurrencyRate, ComparisonStatement.CurrencySymbol, IsNull(ComparisonStatement.Price, 0) As Price, IsNull(ComparisonStatement.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(ComparisonStatement.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(ComparisonStatement.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(ComparisonStatement.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(ComparisonStatement.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(ComparisonStatement.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(ComparisonStatement.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(VendorQuotationMaster.PurchaseInquiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId= VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  Left Outer Join InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId INNER JOIN QuotationDetailTable ON ComparisonStatement.PurchaseInquiryDetailId = QuotationDetailTable.PurchaseInquiryDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where IsNull(QuotationDetailTable.PurchaseInquiryDetailId, 0) =" & PurchaseInquiryDetailId & ""
            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable(strSQL)
            ''Commented on 09-03-2017
            'strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(Detail.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(Detail.CurrencyRate, 0) As CurrencyRate, Detail.CurrencySymbol, IsNull(Detail.Price, 0) As Price, IsNull(Detail.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(Detail.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(Detail.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(Detail.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(Detail.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(Detail.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(Detail.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(VendorQuotationMaster.PurchaseInquiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId= VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  Inner Join InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId INNER JOIN QuotationDetailTable ON ComparisonStatement.PurchaseInquiryDetailId = QuotationDetailTable.PurchaseInquiryDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where IsNull(QuotationDetailTable.HeadArticleId, 0) =" & PurchaseInquiryDetailId & ""
            strSQL = "SELECT IsNull(Detail.VendorQuotationDetailId, 0) As VendorQuotationDetailId,  IsNull(Detail.VendorQuotationId, 0) As VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId, COA.detail_code As VendorCode, COA.detail_title As Vendor, Detail.RequirementDescription,  Detail.ArticleId As ArticleId, Article.ArticleCode As Code, Article.ArticleDescription,  IsNull(Detail.UnitId, 0) As UnitId, Unit.ArticleUnitName As Unit,  IsNull(Detail.ItemTypeId, 0) As ItemTypeId, Type.ArticleTypeName As Type,  IsNull(Detail.CategoryId, 0) As CategoryId, Category.ArticleCompanyName As Category,  IsNull(Detail.SubCategoryId, 0) As SubCategoryId, SubCategory.ArticleLpoName As SubCategory,  IsNull(Detail.OriginId, 0) As OriginId, Origin.ArticleGenderName As Origin, IsNull(ComparisonStatement.Qty, 0) As Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, IsNull(Detail.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Detail.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Detail.CurrencyId, 0) As CurrencyId, tblcurrency.currency_code As Currency, IsNull(ComparisonStatement.CurrencyRate, 0) As CurrencyRate, ComparisonStatement.CurrencySymbol, IsNull(ComparisonStatement.Price, 0) As Price, IsNull(ComparisonStatement.DiscountPer, 0) As DiscountPer, Convert(float, 0) As DiscountAmount,  IsNull(ComparisonStatement.SalesTaxPer, 0) As SalesTaxPer, Convert(float, 0) As SalesTaxAmount, IsNull(ComparisonStatement.AddTaxPer, 0) As AddTaxPer,  Convert(float, 0) As AddTaxAmount, IsNull(ComparisonStatement.IncTaxPer, 0) As IncTaxPer,  Convert(float, 0) As IncTaxAmount, IsNull(ComparisonStatement.CDPer, 0) As CDPer, Convert(float, 0) As CDAmount,  IsNull(ComparisonStatement.NetPrice, 0) As NetPrice, Convert(float, 0) As Amount,  IsNull(ComparisonStatement.OtherCharges, 0) As OtherCharges, Convert(float, 0) As NetCostValue, IsNull(ComparisonStatement.Margin, 0) As Margin, IsNull(ComparisonStatement.QuotedCostValue, 0) QuotedCostValue, IsNull(VendorQuotationMaster.PurchaseInquiryId, 0) As PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, IsNull(Detail.HeadArticleId, 0) As HeadArticleId, IsNull(Detail.Alternate, 0) As Alternate, Convert(Bit, IsNull(ComparisonStatement.Approved, 0)) As Approved, IsNull(ComparisonStatement.InquiryComparisonStatementId, 0) As InquiryComparisonStatementId FROM VendorQuotationDetail As Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId= VendorQuotationMaster.VendorQuotationId Left Outer Join vwCOADetail As COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id  Inner Join InquiryComparisonStatement As ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId INNER JOIN QuotationDetailTable ON ComparisonStatement.PurchaseInquiryDetailId = QuotationDetailTable.PurchaseInquiryDetailId LEFT OUTER JOIN  ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT JOIN ArticleUnitDefTable As Unit On Detail.UnitId = Unit.ArticleUnitId LEFT JOIN ArticleTypeDefTable As Type ON Detail.ItemTypeId = Type.ArticleTypeId LEFT JOIN ArticleCompanyDefTable As Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT JOIN ArticleLpoDefTable As SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT JOIN ArticleGenderDefTable As Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id Where IsNull(QuotationDetailTable.HeadArticleId, 0) =" & PurchaseInquiryDetailId & ""

            Dim dtChild As New DataTable
            dtChild = UtilityDAL.GetDataTable(strSQL)
            dt.Merge(dtChild)
            'dt.AcceptChanges()
            'Detail.DiscountPer, Convert(float, 0) As DiscountAmount,  Detail.SalesTaxPer, Convert(float, 0) As SalesTaxAmount, Detail.AddTaxPer,  Convert(float, 0) As AddTaxAmount, Detail.IncTaxPer,  Convert(float, 0) As IncTaxAmount, Detail.CDPer, Convert(float, 0) As CDAmount,  Detail.NetPrice, Convert(float, 0) As Amount,  Detail.OtherCharges, Convert(float, 0) As NetCostValue
            dt.Columns("DiscountAmount").Expression = "(IsNull(Price, 0)*IsNull(DiscountPer, 0))/100"
            dt.Columns("SalesTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(SalesTaxPer, 0))/100"
            dt.Columns("AddTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(AddTaxPer, 0))/100"
            dt.Columns("IncTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(IncTaxPer, 0))/100"
            dt.Columns("CDAmount").Expression = "(IsNull(Price, 0)*IsNull(CDPer, 0))/100"
            dt.Columns("NetPrice").Expression = "(IsNull(Price, 0)-DiscountAmount)+SalesTaxAmount+AddTaxAmount+IncTaxAmount+CDAmount"
            dt.Columns("Amount").Expression = "(IsNull(NetPrice, 0)*IsNull(Qty, 0))"
            dt.Columns("NetCostValue").Expression = "(IsNull(Amount, 0)+IsNull(OtherCharges, 0))"
            dt.Columns("QuotedCostValue").Expression = "(IsNull(NetCostValue, 0) + (IsNull(NetCostValue, 0)* IsNull(Margin, 0))/100)"
            Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    ''' <summary>
    ''' TASK TFS4513
    ''' </summary>
    ''' <param name="obj"></param>
    ''' <param name="VendorQuotationId"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function GetSalesQuotation(ByVal QuotationNo As String, Optional ByVal flgExcludeTaxPrice As Boolean = False) As DataTable
        Dim strSQL As String = String.Empty
        Try
            Dim str As String = String.Empty
            str = "SELECT Case when Recv_D.SerialNo = '' OR Recv_D.SerialNo IS Null  then 0 else CONVERT(decimal(17,3),Recv_D.SerialNo) end  As SerialNo1, Recv_D.LocationId, Article.ArticleCode, Article.ArticleDescription AS item, Recv_D.RequirementDescription, Recv_D.ArticleSize AS unit, Recv_D.Sz1 AS Qty,CASE WHEN IsNull(Recv_D.PostDiscountPrice, 0) = 0 THEN IsNULL(Article.SalePrice,0) ELSE IsNull(Recv_D.PostDiscountPrice, 0) END AS PostDiscountPrice , Recv_D.Price, IsNull(Recv_D.BaseCurrencyId, 0) As BaseCurrencyId, IsNull(Recv_D.BaseCurrencyRate, 0) As BaseCurrencyRate, IsNull(Recv_D.CurrencyId, 0) As CurrencyId, Case When IsNull(Recv_D.CurrencyId, 0)=1 Then 1 When IsNull(Recv_D.CurrencyRate, 0) = 0  Then 1 Else Recv_D.CurrencyRate End As CurrencyRate, IsNull(Recv_D.CurrencyAmount, 0) As CurrencyAmount, Convert(float, 0) As TotalCurrencyAmount, Isnull(Recv_D.DiscountId,1) as DiscountId , IsNull(Recv_D.DiscountFactor, 0) AS DiscountFactor, IsNull(Recv_D.DiscountValue, 0) As DiscountValue ," _
             & "  (IsNull(Recv_D.Qty, 0) * IsNull(Recv_D.Price, 0) * Case When IsNull(Recv_D.CurrencyId, 0)=1 Then 1 When IsNull(Recv_D.CurrencyRate, 0)=0 Then 1 Else Recv_D.CurrencyRate End) AS Total,  " _
             & " Article.ArticleGroupId, Recv_D.ArticleDefId,Recv_D.Sz7 as PackQty,Recv_D.CurrentPrice, Isnull(recv_d.PackPrice,0) as PackPrice,Isnull(recv_d.SalesTax_Percentage,0) as SalesTax_Percentage, Convert(float,0) as SalesTaxAmount, Convert(float,0) as CurrencySalesTaxAmount, IsNull(SED_Tax_Percent,0) as [SED_Tax_Percent], IsNull(SED_Tax_Amount,0) as [SED_Tax_Amount], Convert(float,0) as CurrencySEDAmount, Convert(float,0) as Net_Amount, ISNULL(recv_d.SchemeQty,0) as SchemeQty, ISNULL(recv_d.Discount_Percentage,0) as Discount_Percentage, Isnull(Recv_D.PurchasePrice,0) as PurchasePrice, Isnull(Recv_D.Pack_Desc,Recv_D.ArticleSize) as Pack_Desc, Recv_D.Comments, Recv_D.ItemDescription ,Recv_D.BrandName as Brand, Recv_D.Specification, Recv_D.RegistrationNo as ItemRegistrationNo, IsNull(Recv_D.TradePrice,0) as TradePrice, Recv_D.TenderSrNo,IsNull(Recv_D.CostPrice,0) as CostPrice, ISNULL(Recv_D.QuotationId, 0) As QuotationId, ISNULL(Recv_D.QuotationDetailId, 0) As QuotationDetailId, ISNULL(Recv_D.SOQuantity, 0) As SOQuantity, IsNull(Recv_D.Qty, 0) As TotalQty, Recv_D.PurchaseInquiryDetailId,  IsNull(Recv_D.VendorQuotationDetailId, 0) As VendorQuotationDetailId, Recv_D.HeadArticleId As HeadArticleId, IsNull(Recv_D.PurchaseInquiryId, 0) As PurchaseInquiryId, Convert(bit,Recv_D.Alternate) As Alternate FROM dbo.QuotationDetailTable AS Recv_D INNER JOIN dbo.QuotationMasterTable AS Recv ON Recv_D.QuotationId = Recv.QuotationId LEFT OUTER JOIN " _
             & " dbo.ArticleDefTable Article ON Recv_D.ArticleDefId = Article.ArticleId LEFT OUTER JOIN " _
             & " dbo.ArticleGroupDefTable Article_Group ON Article.ArticleGroupId = Article_Group.ArticleGroupId  LEFT OUTER JOIN tblDefLocation Loc ON Loc.Location_Id = Recv_D.LocationId " _
             & " Where Recv.QuotationNo = '" & QuotationNo & "' ORDER BY 1  Asc "
            Dim dtDisplayDetail As New DataTable
            dtDisplayDetail = UtilityDAL.GetDataTable(str)
            dtDisplayDetail.Columns("DiscountValue").Expression = "IIF(DiscountId= 1,((IsNull(PostDiscountPrice,0)*IsNull(DiscountFactor,0))/100), IsNull(DiscountFactor,0))" ''TFS2827
            dtDisplayDetail.Columns("Price").Expression = "IIF(DiscountId= 1, IsNull(PostDiscountPrice,0)-((IsNull(PostDiscountPrice,0)*IsNull(DiscountFactor,0))/100), IsNull(PostDiscountPrice,0)-IsNull(DiscountFactor,0))"
            dtDisplayDetail.Columns("Total").Expression = "IsNull([TotalQty],0)*IsNull([Price],0)*IsNull([CurrencyRate], 0)"
            dtDisplayDetail.Columns("CurrencyAmount").Expression = "IsNull([TotalQty],0)*IsNull([Price],0)"
            dtDisplayDetail.Columns("SED_Tax_Amount").Expression = "((IsNull([SED_Tax_Percent],0)/100)*IsNull([Total],0))"
            dtDisplayDetail.Columns("CurrencySEDAmount").Expression = "((IsNull([SED_Tax_Percent],0)/100)*IsNull([CurrencyAmount],0))"
            If flgExcludeTaxPrice = False Then
                dtDisplayDetail.Columns("SalesTaxAmount").Expression = "((IsNull([SalesTax_Percentage],0)/100)*IsNull([Total],0))"
                dtDisplayDetail.Columns("CurrencySalesTaxAmount").Expression = "((IsNull([SalesTax_Percentage],0)/100)*IsNull([CurrencyAmount],0))"
                dtDisplayDetail.Columns("Net_Amount").Expression = "(IsNull([Total],0)+IsNull([SalesTaxAmount],0)+IsNull([SED_Tax_Amount],0))"
                dtDisplayDetail.Columns("TotalCurrencyAmount").Expression = "(IsNull([CurrencyAmount],0)+IsNull([CurrencySalesTaxAmount],0)+IsNull([CurrencySEDAmount],0))"
            Else
                dtDisplayDetail.Columns("SalesTaxAmount").Expression = "((IsNull([Total],0)/(IsNull([SalesTax_Percentage],0)+100)) * IsNull([SalesTax_Percentage],0))"
                dtDisplayDetail.Columns("CurrencySalesTaxAmount").Expression = "((IsNull([CurrencyAmount],0)/(IsNull([SalesTax_Percentage],0)+100)) *IsNull([SalesTax_Percentage],0))"
                dtDisplayDetail.Columns("Net_Amount").Expression = "(IsNull([Total],0)-IsNull([SalesTaxAmount],0)+IsNull([SED_Tax_Amount],0))"
                dtDisplayDetail.Columns("TotalCurrencyAmount").Expression = "(IsNull([CurrencyAmount],0)-IsNull([CurrencySalesTaxAmount],0)+IsNull([CurrencySEDAmount],0))"
            End If
            Return dtDisplayDetail
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function AddQuotation(ByVal obj As SalesQuotationMaster, ByVal VendorQuotationId As Integer) As Boolean
        Dim Con As New SqlConnection(SQLHelper.CON_STR)
        If Con.State = ConnectionState.Closed Then Con.Open()
        Dim trans As SqlTransaction = Con.BeginTransaction
        Try
            Dim strSQL As String = String.Empty
            'strSQL = " INSERT INTO QuotationMasterTable(LocationId,QuotationNo,QuotationDate,VendorId,SalesOrderQty,SalesOrderAmount, CashPaid, Remarks,UserName, status, SpecialAdjustment,Posted, PONo, NewCustomer,Delivery_Date, Adj_Flag, Adjustment,CostCenterId, PO_Date,EditionalTax_Percentage,SED_Percentage, Terms_And_Condition,Apprved,CustomerPhone,CustomerAddress,Approved_User, RevisionNumber) " _
            '& " VALUES(0, N'" & txtPONo.Text & "',N'" & dtpPODate.Value.ToString("yyyy-M-d h:mm:ss tt") & "'," & cmbVendor.ActiveRow.Cells(0).Value & ", " & Me.grd.GetTotal(Me.grd.RootTable.Columns("Qty"), Janus.Windows.GridEX.AggregateFunction.Sum) & "," & NetAmount & ", " & Val(txtPaid.Text) & ",N'" & txtRemarks.Text.Replace("'", "''") & "',N'" & LoginUserName & "', N'" & EnumStatus.Open.ToString & "', " & IIf(Me.rbtAdjPercentage.Checked = True, Val(Me.txtSpecialAdjustment.Text), 0) & ", " & IIf(Me.chkPost.Checked = True, 1, 0) & ", N'" & Me.txtCustPONo.Text.Replace("'", "''") & "', N'" & Me.txtNewCustomer.Text.Replace("'", "''") & "', " & IIf(Me.dtpDeliveryDate.Checked = True, "N'" & Me.dtpDeliveryDate.Value.ToString("yyyy-M-d h:mm:ss tt") & "'", "NULL") & ", " & IIf(Me.rbtAdjFlat.Checked = True, 0, 1) & ", " & IIf(Me.rbtAdjFlat.Checked = True, Adjustment, Val(Me.txtSpecialAdjustment.Text)) & ", " & Me.cmbProject.SelectedValue & ", " & IIf(Me.dtpPDate.Checked = True, "N'" & Me.dtpPDate.Value.ToString("yyyy-M-d h:mm:ss tt") & "'", "NULL") & ", " & TransitPercent & "," & WHTaxPercent & ",N'" & Me.txtTerms_And_Condition.Text.Replace("'", "''") & "', " & IIf(Me.ChkApproved.Checked = True, 1, 0) & ",N'" & Me.txtCustomerMobile.Text.Replace("'", "''").ToString & "',N'" & Me.txtCustomerAddress.Text.Replace("'", "''").ToString & "'," & IIf(ChkApproved.Checked = True, "N'" & LoginUserName.Replace("'", "''") & "'", "NULL") & ", 0)"
            'Dim QuotationId = SQLHelper.ExecuteScaler(trans, CommandType.Text, strSQL)
            strSQL = " INSERT INTO QuotationMasterTable(LocationId, QuotationNo, QuotationDate, VendorId, UserName, RevisionNumber, Status, Terms_And_Condition,TermsAndConditionsId, SalesInquiryId) " _
          & " VALUES(" & obj.LocationId & ", N'" & obj.QuotationNo & "', N'" & obj.QuotationDate.ToString("yyyy-M-d h:mm:ss tt") & "', " & obj.VendorId & ", N'" & obj.UserName & "', 0, N'" & obj.Status & "', N'" & obj.Terms_And_Condition.Replace("'", "''") & "'," & obj.TermsAndConditionId & ", " & obj.SalesInquiryId & ") Select @@Identity"
            Dim QuotationId = SQLHelper.ExecuteScaler(trans, CommandType.Text, strSQL)
            SaveVendorQuotationAttachments(QuotationId, "frmVendorQuotation", "frmQoutationNew", trans, VendorQuotationId)
            AddQuotationDetail(obj.DetailList, QuotationId, trans)
            trans.Commit()
            Dim ValueTable As DataTable = GetSingleQuotation(QuotationId)
            NotificationDAL.SaveAndSendNotification("Quotation", "QuotationMasterTable", QuotationId, ValueTable, "Sales > Quotation")
            Return True
        Catch ex As Exception
            trans.Rollback()
            Throw ex
        Finally
            Con.Close()
        End Try
    End Function
    Public Function AddQuotationDetail(ByVal obj As List(Of SalesQuotationDetail), ByVal QuotationId As Integer, ByVal trans As SqlTransaction) As Boolean
        Dim Con As New SqlConnection(SQLHelper.CON_STR)
        If Con.State = ConnectionState.Closed Then Con.Open()
        'Dim trans As SqlTransaction = Con.BeginTransaction
        Try
            '            RequirementDescription	nvarchar(200)	Checked
            'PurchaseInquiryDetailId	int	Checked
            'VendorQuotationDetailId	int	Checked
            ''Query Edit : Ayesha Rehman : OTC bug
            For Each objMod As SalesQuotationDetail In obj
                Dim strSQL As String = String.Empty
                strSQL = " INSERT INTO QuotationDetailTable(QuotationId, LocationId, ArticleDefId, ArticleSize, Sz1,Qty,Price,PostDiscountPrice,Sz7,CurrentPrice, SalesTax_Percentage, SchemeQty, Discount_Percentage,PurchasePrice,PackPrice, Pack_Desc, Comments,ItemDescription,BrandName,Specification,RegistrationNo,TradePrice,TenderSrNo,CostPrice,SED_Tax_Percent, SED_Tax_Amount,SOQuantity, BaseCurrencyId, BaseCurrencyRate, CurrencyId, CurrencyRate, CurrencyAmount, RequirementDescription, PurchaseInquiryDetailId, VendorQuotationDetailId, HeadArticleId, SerialNo, PurchaseInquiryId, Alternate, Margin) " _
                & " VALUES(" & QuotationId & ", " & objMod.LocationId & ",  " & objMod.ArticleDefId & ",N'" & objMod.ArticleSize & "', " & objMod.Sz1 & ", " _
                                      & " " & objMod.Qty & ", " & objMod.Price & ", " & objMod.PostDiscountPrice & ", 0 , " & objMod.CurrentPrice & " , " & objMod.SalesTax_Percentage & ", " & objMod.SchemeQty & ", " & objMod.Discount_Percentage & ", " & objMod.PurchasePrice & ", " & objMod.PackPrice & ", N'" & objMod.Pack_Desc.Replace("'", "''") & "', N'" & objMod.Comments.Replace("'", "''") & "','" & objMod.ItemDescription.Replace("'", "''") & "', '" & objMod.BrandName.Replace("'", "''") & "', '" & objMod.Specification.Replace("'", "''") & "', '" & objMod.RegistrationNo.Replace("'", "''") & "', " & objMod.TradePrice & ", '" & objMod.TenderSrNo.Replace("'", "''") & "', " & objMod.CostPrice & ", " & objMod.SED_Tax_Percent & ", " & objMod.SED_Tax_Amount & ", " & objMod.SOQuantity & ", " & objMod.BaseCurrencyId & ", " & objMod.BaseCurrencyRate & ", " & objMod.CurrencyId & ", " & objMod.CurrencyRate & ", " & objMod.CurrencyAmount & ", N'" & objMod.RequirementDescription.Replace("'", "''") & "', " & IIf(objMod.PurchaseInquiryDetailId = 0, "NULL", objMod.PurchaseInquiryDetailId) & ", " & objMod.VendorQuotationDetailId & ", " & IIf(objMod.HeadArticleId = 0, "NULL", objMod.HeadArticleId) & ", N'" & objMod.SerialNo.Replace("'", "''") & "', " & objMod.PurchaseInquiryId & "," & IIf(objMod.Alternate = True, 1, 0) & ", " & objMod.Margin & ")"
                '& " Else Update QuotationDetailTable SET VendorQuotationDetailId= " & objMod.VendorQuotationDetailId & ", VendorId = " & objMod.VendorId & ", PurchaseInuiryId= " & objMod.PurchaseInuiryId & ", PurchaseInquiryDetailId= " & objMod.PurchaseInquiryDetailId & ", NetCostValue= " & objMod.NetCostValue & ", Margin= " & objMod.Margin & ", Approved= " & IIf(objMod.Approved = True, 1, 0) & ", UserName= '" & objMod.UserName.Replace("'", "''") & "', Dated= '" & objMod.Dated.ToString("yyyy-M-dd hh:mm:ss tt") & "' WHERE InquiryComparisonStatementId=" & objMod.InquiryComparisonStatementId & ""
                SQLHelper.ExecuteNonQuery(trans, CommandType.Text, strSQL)
            Next
            'trans.Commit()
            Return True
        Catch ex As Exception
            trans.Rollback()
            Throw ex
        Finally
            Con.Close()
        End Try
    End Function

    Public Function AddQuotationDetailExisting(ByVal obj As List(Of SalesQuotationDetail), ByVal QuotationId As Integer, ByVal trans As SqlTransaction, ByVal DublicateQuotation As Boolean) As Boolean
        Dim Con As New SqlConnection(SQLHelper.CON_STR)
        If Con.State = ConnectionState.Closed Then Con.Open()
        Try
            For Each objMod As SalesQuotationDetail In obj
                Dim strSQL As String = String.Empty
                ''Query Edit : Ayesha Rehman : OTC bug
                strSQL = " INSERT INTO QuotationDetailTable(QuotationId, LocationId, ArticleDefId, ArticleSize, Sz1,Qty,Price,PostDiscountPrice,Sz7,CurrentPrice, SalesTax_Percentage, SchemeQty, Discount_Percentage,PurchasePrice,PackPrice, Pack_Desc, Comments,ItemDescription,BrandName,Specification,RegistrationNo,TradePrice,TenderSrNo,CostPrice,SED_Tax_Percent, SED_Tax_Amount,SOQuantity, BaseCurrencyId, BaseCurrencyRate, CurrencyId, CurrencyRate, CurrencyAmount, RequirementDescription, PurchaseInquiryDetailId, VendorQuotationDetailId, HeadArticleId, SerialNo, PurchaseInquiryId, Alternate, Margin) " _
                & " VALUES(" & QuotationId & ", " & objMod.LocationId & ",  " & objMod.ArticleDefId & ",N'" & objMod.ArticleSize & "', " & objMod.Sz1 & ", " _
                                      & " " & objMod.Qty & ", " & objMod.Price & ", " & objMod.PostDiscountPrice & ", 0 , " & objMod.CurrentPrice & " , " & objMod.SalesTax_Percentage & ", " & objMod.SchemeQty & ", " & objMod.Discount_Percentage & ", " & objMod.PurchasePrice & ", " & objMod.PackPrice & ", N'" & objMod.Pack_Desc.Replace("'", "''") & "', N'" & objMod.Comments.Replace("'", "''") & "','" & objMod.ItemDescription.Replace("'", "''") & "', '" & objMod.BrandName.Replace("'", "''") & "', '" & objMod.Specification.Replace("'", "''") & "', '" & objMod.RegistrationNo.Replace("'", "''") & "', " & objMod.TradePrice & ", '" & objMod.TenderSrNo.Replace("'", "''") & "', " & objMod.CostPrice & ", " & objMod.SED_Tax_Percent & ", " & objMod.SED_Tax_Amount & ", " & objMod.SOQuantity & ", " & objMod.BaseCurrencyId & ", " & objMod.BaseCurrencyRate & ", " & objMod.CurrencyId & ", " & objMod.CurrencyRate & ", " & objMod.CurrencyAmount & ", N'" & objMod.RequirementDescription.Replace("'", "''") & "', " & IIf(objMod.PurchaseInquiryDetailId = 0, "NULL", objMod.PurchaseInquiryDetailId) & ", " & objMod.VendorQuotationDetailId & ", " & IIf(objMod.HeadArticleId = 0, "NULL", objMod.HeadArticleId) & ", N'" & objMod.SerialNo.Replace("'", "''") & "', " & objMod.PurchaseInquiryId & "," & IIf(objMod.Alternate = True, 1, 0) & ", " & objMod.Margin & ") Select @@Identity"
                Dim QuotationDetailId As Integer = SQLHelper.ExecuteScaler(trans, CommandType.Text, strSQL)
                ''Start TFS4335 : Getting QuotationHistoryId to check whether Quotation History Exists??
                strSQL = " Select QuotationHistoryId from QuotationHistory where QuotationId  = " & QuotationId & " order by 1 desc "
                Dim QuotationHistoryId As Integer = SQLHelper.ExecuteScaler(trans, CommandType.Text, strSQL)
                If DublicateQuotation = True And QuotationHistoryId > 0 Then
                    ''TFS4335 : Updating QuotationDetailHistory on updation on Quotation
                    strSQL = " INSERT INTO QuotationDetailHistory([QuotationHistoryId],[QuotationDetailId],[QuotationId],[LocationId],[ArticleDefId],[ArticleSize],[Sz1],[Qty],[Price],[CurrentPrice],[DeliveredQty],[SalesTax_Percentage],[SchemeQty],[Discount_Percentage],[PurchasePrice],[PackPrice],[Pack_Desc],[Comments],[ItemDescription],[BrandName],[Specification],[RegistrationNo],[TradePrice],[TenderSrNo],[CostPrice],[SED_Tax_Percent],[SED_Tax_Amount],[SOQuantity],[BaseCurrencyId],[BaseCurrencyRate],[CurrencyId],[CurrencyRate],[CurrencyAmount],[RequirementDescription],[PurchaseInquiryDetailId],[VendorQuotationDetailId],[HeadArticleId],[SerialNo],[PurchaseInquiryId],[Alternate], [Margin]) " _
                    & " VALUES(" & QuotationHistoryId & "," & QuotationDetailId & "," & QuotationId & ", " & objMod.LocationId & ",  " & objMod.ArticleDefId & ",N'" & objMod.ArticleSize & "', " & objMod.Sz1 & ", " _
                                      & " " & objMod.Qty & ", " & objMod.Price & ", 0 , " & objMod.CurrentPrice & " , " & objMod.SalesTax_Percentage & ", " & objMod.SchemeQty & ", " & objMod.Discount_Percentage & ", " & objMod.PurchasePrice & ", " & objMod.PackPrice & ", N'" & objMod.Pack_Desc.Replace("'", "''") & "', N'" & objMod.Comments.Replace("'", "''") & "','" & objMod.ItemDescription.Replace("'", "''") & "', '" & objMod.BrandName.Replace("'", "''") & "', '" & objMod.Specification.Replace("'", "''") & "', '" & objMod.RegistrationNo.Replace("'", "''") & "', " & objMod.TradePrice & ", '" & objMod.TenderSrNo.Replace("'", "''") & "', " & objMod.CostPrice & ", " & objMod.SED_Tax_Percent & ", " & objMod.SED_Tax_Amount & ", " & objMod.SOQuantity & ", " & objMod.BaseCurrencyId & ", " & objMod.BaseCurrencyRate & ", " & objMod.CurrencyId & ", " & objMod.CurrencyRate & ", " & objMod.CurrencyAmount & ", N'" & objMod.RequirementDescription.Replace("'", "''") & "', " & IIf(objMod.PurchaseInquiryDetailId = 0, "NULL", objMod.PurchaseInquiryDetailId) & ", " & objMod.VendorQuotationDetailId & ", " & IIf(objMod.HeadArticleId = 0, "NULL", objMod.HeadArticleId) & ", N'" & objMod.SerialNo.Replace("'", "''") & "', " & objMod.PurchaseInquiryId & "," & IIf(objMod.Alternate = True, 1, 0) & ", " & objMod.Margin & ")"
                    ''& " Select Ident_Current('QuotationHistory')," & QuotationDetailId & ",[QuotationId],[LocationId],[ArticleDefId],[ArticleSize],[Sz1],[Sz2],[Sz3],[Sz4],[Sz5],[Sz6],[Sz7],[Qty],[Price],[CurrentPrice],[DeliveredQty],[SalesTax_Percentage],[SchemeQty],[Discount_Percentage],[DeliveredSchemeQty],[PurchasePrice],[PackPrice],[Pack_Desc],[Comments],[ItemDescription],[BrandName],[Specification],[RegistrationNo],[TradePrice],[Item_Info],[Pack_40Kg_Weight],[TenderSrNo],[CostPrice],[SED_Tax_Percent],[SED_Tax_Amount],[SOQuantity],[DeliveredTotalQty],[BaseCurrencyId],[BaseCurrencyRate],[CurrencyId],[CurrencyRate],[CurrencyAmount],[RequirementDescription],[PurchaseInquiryDetailId],[Alternate] ,[VendorQuotationDetailId],[HeadArticleId],[SerialNo],[PurchaseInquiryId] From QuotationDetailTable WHERE QuotationId = " & QuotationId & " "
                    SQLHelper.ExecuteNonQuery(trans, CommandType.Text, strSQL)
                    ''End TFS4335
                End If
            Next
            trans.Commit()
            Return True
        Catch ex As Exception
            trans.Rollback()
            Throw ex
        Finally
            Con.Close()
        End Try
    End Function

    Public Function IsQuotationExists(ByVal VendorQuotationDetailId As Integer) As Boolean
        Try
            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable("SELECT VendorQuotationDetailId FROM dbo.QuotationDetailTable Where QuotationDetailTable.VendorQuotationDetailId = " & VendorQuotationDetailId & "")
            dt.AcceptChanges()
            If dt.Rows.Count > 0 Then
                Return True
            Else
                Return False
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Function

    Public Function IsPurchaseInquiryExists(ByVal PurchaseInquiryDetailId As Integer) As Boolean
        Try
            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable("SELECT PurchaseInquiryDetailId FROM dbo.QuotationDetailTable Where QuotationDetailTable.PurchaseInquiryDetailId = " & PurchaseInquiryDetailId & "")
            dt.AcceptChanges()
            If dt.Rows.Count > 0 Then
                If Val(dt.Rows(0).Item(0).ToString) = 0 Then
                    Return False
                    Exit Function
                End If
                Return True
            Else
                Return False
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Function

    Public Function IsApprovedAlready(ByVal PurchaseInquiryDetailId As Integer) As Boolean
        Try
            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable("SELECT PurchaseInquiryDetailId FROM dbo.InquiryComparisonStatement Where PurchaseInquiryDetailId = " & PurchaseInquiryDetailId & " AND Alternate IS NOT NULL")
            dt.AcceptChanges()
            If dt.Rows.Count > 0 Then
                If Val(dt.Rows(0).Item(0).ToString) = 0 Then
                    Return False
                    Exit Function
                End If
                Return True
            Else
                Return False
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function SaveDocument(ByVal DocId As Integer, ByVal Source As String, ByVal objTrans As SqlTransaction, ByVal objPath As String, ByVal arrFile As List(Of String), ByVal docDate As DateTime, ByVal PurchaseInquiryId As Integer) As Boolean
        'Dim Con As New SqlConnection(SQLHelper.CON_STR)
        'If Con.State = ConnectionState.Closed Then Con.Open()
        Try

            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable("Select DocId, Source, Path + '\' + FileName  as [FileNames]  From DocumentAttachment WHERE DocId=" & DocId & " AND Source=N'" & Source & "'", objTrans)
            dt.AcceptChanges()


            Dim objdt As New DataTable
            objdt = UtilityDAL.GetDataTable("Select IsNull(Count(*),0)+1 as Cont From DocumentAttachment WHERE DocId=" & DocId & " AND Source=N'" & Source & "'", objTrans)
            Dim intId As Integer = objdt.Rows(0)(0)

            Dim strSQL As String = String.Empty
            strSQL = "Delete From DocumentAttachment WHERE DocId=" & DocId & " AND Source=N'" & Source & "'"
            SQLHelper.ExecuteNonQuery(objTrans, CommandType.Text, strSQL)
            'cmd.ExecuteNonQuery()

            'Dim objPath As String = getConfigValueByType("FileAttachmentPath").ToString

            If arrFile.Count > 0 Then
                For Each objFile As String In arrFile
                    If IO.File.Exists(objFile) Then
                        If IO.Directory.Exists(objPath) = False Then
                            IO.Directory.CreateDirectory(objPath)
                        End If
                        Dim New_Files As String = intId & "_" & DocId & "_VQ" & PurchaseInquiryId & "_" & docDate.ToString("yyyyMMdd") & "." & objFile.Substring(objFile.LastIndexOf(".") + 1)
                        Dim dr As DataRow
                        dr = dt.NewRow
                        dr(0) = DocId
                        dr(1) = Source
                        dr(2) = objPath & "\" & New_Files
                        dt.Rows.Add(dr)
                        dt.AcceptChanges()
                        If IO.File.Exists(objPath & "\" & New_Files) Then
                            IO.File.Delete(objPath & "\" & New_Files)
                        End If
                        IO.File.Copy(objFile, objPath & "\" & New_Files)
                        intId += 1
                    End If
                Next
            End If


            If dt IsNot Nothing Then
                If dt.Rows.Count > 0 Then
                    For Each r As DataRow In dt.Rows
                        Dim strPath As String = objPath
                        Dim strFileName As String = r.Item("FileNames").ToString.Substring(r.Item("FileNames").ToString.LastIndexOf("\") + 1)
                        strSQL = "INSERT INTO DocumentAttachment(DocId, Source, FileName, Path) Values(" & Val(r("DocId").ToString) & ",N'" & r.Item("Source").ToString.Replace("'", "''") & "', N'" & strFileName.Replace("'", "''") & "', N'" & strPath.Replace("'", "''") & "')"
                        SQLHelper.ExecuteNonQuery(objTrans, CommandType.Text, strSQL)
                    Next
                End If
            End If
        Catch ex As Exception
            objTrans.Rollback()
            Throw ex
        End Try
    End Function
    Public Sub SaveVendorQuotationAttachments(ByVal QuotationId As Integer, ByVal Source As String, ByVal InputSource As String, ByVal objTrans As SqlTransaction, ByVal VendorQuotationId As Integer)
        Try
            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable("Select DocId, FileName, Path  From DocumentAttachment WHERE DocId=" & VendorQuotationId & " AND Source=N'" & Source & "'")
            dt.AcceptChanges()
            If dt IsNot Nothing Then
                If dt.Rows.Count > 0 Then
                    For Each r As DataRow In dt.Rows
                        Dim strSQL As String = ""
                        'Dim strFileName As String = r.Item("FileNames").ToString.Substring(r.Item("FileNames").ToString.LastIndexOf("\") + 1)
                        strSQL = "INSERT INTO DocumentAttachment(DocId, Source, FileName, Path) Values(" & QuotationId & ", N'" & InputSource.Replace("'", "''") & "', N'" & r.Item("FileName").ToString & "', N'" & r.Item("Path").ToString & "')"
                        SQLHelper.ExecuteNonQuery(objTrans, CommandType.Text, strSQL)
                    Next
                End If
            End If
            'Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Sub
    ''Start TFS3109 : Ayesha Rehman : 25-04-2018
    ''' <summary>
    ''' This sub is Added to Map Inward expenses with Purchase Order ,coming from Vendor Quotation
    ''' </summary>
    ''' <param name="QuotationId"></param>
    ''' <param name="Source"></param>
    ''' <param name="InputSource"></param>
    ''' <param name="objTrans"></param>
    ''' <param name="VendorQuotationId"></param>
    ''' <remarks></remarks>
    Public Sub SaveInwardExpenses(ByVal PurchaseId As Integer, ByVal Source As String, ByVal InputSource As String, ByVal objTrans As SqlTransaction, ByVal VendorQuotationId As Integer)
        Try
            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable("Select AccountId , Exp_Amount  From InwardExpenseDetailTable WHERE PurchaseId=" & VendorQuotationId & " AND DocType=N'" & Source & "'")
            dt.AcceptChanges()
            If dt IsNot Nothing Then
                If dt.Rows.Count > 0 Then
                    For Each r As DataRow In dt.Rows
                        Dim strSQL As String = ""
                        'Dim strFileName As String = r.Item("FileNames").ToString.Substring(r.Item("FileNames").ToString.LastIndexOf("\") + 1)
                        'strSQL = "INSERT INTO tblDefInwardAccounts(InwardAccountId,Active) VALUES(" & r.Item("AccountId").ToString & ",1) Select @@Identity"
                        'SQLHelper.ExecuteNonQuery(objTrans, CommandType.Text, strSQL)
                        strSQL = "INSERT INTO InwardExpenseDetailTable(PurchaseId, DocType, AccountId, Exp_Amount) Values(" & PurchaseId & ", N'" & InputSource.Replace("'", "''") & "', N'" & r.Item("AccountId").ToString & "', N'" & r.Item("Exp_Amount").ToString & "')"
                        SQLHelper.ExecuteNonQuery(objTrans, CommandType.Text, strSQL)
                    Next
                End If
            End If
            'Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Sub
    ''End TFS3109
    Private Function GetSingleQuotation(ByVal QuotationId As Integer) As DataTable
        Dim Str As String = ""
        Try
            Str = "SELECT Recv.QuotationNo, Recv.QuotationDate, dbo.vwCOADetail.detail_title AS CustomerName, Recv.SalesOrderQty,  " & _
                                "Recv.SalesOrderAmount, Recv.QuotationId, Recv.VendorId, Recv.Remarks, CONVERT(varchar, Recv.CashPaid) AS CashPaid, ISNULL(Recv.LocationId,0) as LocationId, ISNULL(Recv.SpecialAdjustment,0) as SpecialAdjustment, Recv.PoNo, Recv.NewCustomer, '' as Employee_Name, ISNULL(Recv.Posted,0) as Posted, Recv.Delivery_Date, Isnull(Recv.Adj_Flag,0) as Adj_Flag, Isnull(Recv.Adjustment,0) as Adjustment, Isnull(Recv.CostCenterID,0) as CostCenterId, Recv.PO_Date,  ISNULL(Recv.EditionalTax_Percentage,0) as EditionalTax_Percentage, ISNULL(Recv.SED_Percentage,0) as SED_Percentage, ISNULL(Recv.Apprved,0)as Approved, recv.Terms_And_Condition, recv.username as 'User Name', Recv.VerifiedBy" & _
                                ",Recv.CustomerPhone, Recv.CustomerAddress, Recv.Approved_User " & _
                                "FROM dbo.QuotationMasterTable Recv LEFT OUTER JOIN " & _
                                "dbo.vwCOADetail ON Recv.VendorId = dbo.vwCOADetail.coa_detail_id WHERE Recv.QuotationId = " & QuotationId & ""
            Dim dt As DataTable = UtilityDAL.GetDataTable(Str)
            Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Function

    'objCommand.CommandText = "Insert into QuotationDetailTable (QuotationId, LocationId, ArticleDefId,ArticleSize, Sz1,Qty,Price,Sz7,CurrentPrice, SalesTax_Percentage, SchemeQty, Discount_Percentage,PurchasePrice,PackPrice, Pack_Desc, Comments,ItemDescription,BrandName,Specification,RegistrationNo,TradePrice,TenderSrNo,CostPrice,SED_Tax_Percent, SED_Tax_Amount,SOQuantity, BaseCurrencyId, BaseCurrencyRate, CurrencyId, CurrencyRate, CurrencyAmount) values( " _
    '                                 & " ident_current('QuotationMasterTable'), " & Val(Me.grd.GetRows(i).Cells(GrdEnum.LocationId).Value.ToString) & ",  " & Val(grd.GetRows(i).Cells(GrdEnum.ItemId).Value.ToString) & ",N'" & (grd.GetRows(i).Cells(GrdEnum.Unit).Value.ToString) & "'," & Val(grd.GetRows(i).Cells(GrdEnum.Qty).Value.ToString) & ", " _
    '                                 & " " & Val(grd.GetRows(i).Cells(GrdEnum.TotalQty).Value.ToString) & ", " & Val(grd.GetRows(i).Cells(GrdEnum.Rate).Value.ToString) & ", " & Val(grd.GetRows(i).Cells(GrdEnum.PackQty).Value.ToString) & " , " & Val(grd.GetRows(i).Cells(GrdEnum.CurrentPrice).Value.ToString) & " , " & Val(grd.GetRows(i).Cells(GrdEnum.SalesTax_Percentage).Value.ToString) & ", " & Val(grd.GetRows(i).Cells(GrdEnum.SchemeQty).Value.ToString) & ", " & Val(grd.GetRows(i).Cells(GrdEnum.Discount_Percentage).Value.ToString) & ", " & Val(grd.GetRows(i).Cells(GrdEnum.PurchasePrice).Value.ToString) & ", " & Val(grd.GetRows(i).Cells(GrdEnum.PackPrice).Value.ToString) & ", N'" & Me.grd.GetRows(i).Cells("Pack_Desc").Value.ToString.Replace("'", "''") & "', N'" & Me.grd.GetRows(i).Cells("Comments").Value.ToString.Replace("'", "''") & "','" & Me.grd.GetRows(i).Cells(GrdEnum.ItemDescription).Value.ToString.Replace("'", "''") & "','" & Me.grd.GetRows(i).Cells(GrdEnum.Brand).Value.ToString.Replace("'", "''") & "','" & Me.grd.GetRows(i).Cells(GrdEnum.Specification).Value.ToString.Replace("'", "''") & "','" & Me.grd.GetRows(i).Cells(GrdEnum.ItemRegistrationNo).Value.ToString.Replace("'", "''") & "'," & Val(Me.grd.GetRows(i).Cells(GrdEnum.TradePrice).Value.ToString) & ",'" & Me.grd.GetRows(i).Cells(GrdEnum.TenderSrNo).Value.ToString.Replace("'", "''") & "'," & Val(Me.grd.GetRows(i).Cells("CostPrice").Value.ToString) & "," & Val(Me.grd.GetRows(i).Cells("SED_Tax_Percent").Value.ToString) & "," & Val(Me.grd.GetRows(i).Cells("SED_Tax_Amount").Value.ToString) & ", " & Val(Me.grd.GetRows(i).Cells("SOQuantity").Value.ToString) & ", " & Val(Me.grd.GetRows(i).Cells("BaseCurrencyId").Value.ToString) & ", " & Val(Me.grd.GetRows(i).Cells("BaseCurrencyRate").Value.ToString) & ", " & Val(Me.grd.GetRows(i).Cells("CurrencyId").Value.ToString) & ", " & Val(Me.grd.GetRows(i).Cells("CurrencyRate").Value.ToString) & ", " & Val(Me.grd.GetRows(i).Cells("CurrencyAmount").Value.ToString) & ") "

    Public Function UpdateVendorQuotationDetail(ByVal VendorQuotationDetailId As Integer, ByVal StatusId As Integer) As Boolean
        Dim Con As New SqlConnection(SQLHelper.CON_STR)
        If Con.State = ConnectionState.Closed Then Con.Open()
        Dim trans As SqlTransaction = Con.BeginTransaction
        Try
            Dim strSQL As String = String.Empty
            strSQL = "UPDATE VendorQuotationDetail SET StatusId = " & StatusId & " WHERE VendorQuotationDetailId = " & VendorQuotationDetailId & ""
            SQLHelper.ExecuteNonQuery(trans, CommandType.Text, strSQL)
            trans.Commit()
            Return True
        Catch ex As Exception
            trans.Rollback()
            Throw ex
        Finally
            Con.Close()
        End Try
    End Function

    Public Function UpdateVendorQuotationDetailWithComments(ByVal VendorQuotationDetailId As Integer, ByVal StatusId As Integer, ByVal Comments As String) As Boolean
        Dim Con As New SqlConnection(SQLHelper.CON_STR)
        If Con.State = ConnectionState.Closed Then Con.Open()
        Dim trans As SqlTransaction = Con.BeginTransaction
        Try
            Dim strSQL As String = String.Empty
            strSQL = "UPDATE VendorQuotationDetail SET Comments = '" & Comments & "', StatusId = " & StatusId & " WHERE VendorQuotationDetailId = " & VendorQuotationDetailId & ""
            SQLHelper.ExecuteNonQuery(trans, CommandType.Text, strSQL)
            trans.Commit()
            Return True
        Catch ex As Exception
            trans.Rollback()
            Throw ex
        Finally
            Con.Close()
        End Try
    End Function
    ''' <summary>
    ''' TASK TFS2019
    ''' </summary>
    ''' <param name="obj"></param>
    ''' <param name="VendorQuotationId"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function AddPurchaseOrder(ByVal obj As PurchaseOrderMaster, ByVal VendorQuotationId As Integer) As Boolean
        Dim Con As New SqlConnection(SQLHelper.CON_STR)
        If Con.State = ConnectionState.Closed Then Con.Open()
        Dim trans As SqlTransaction = Con.BeginTransaction
        Try
            Dim strSQL As String = String.Empty
            'strSQL = " INSERT INTO QuotationMasterTable(LocationId,QuotationNo,QuotationDate,VendorId,SalesOrderQty,SalesOrderAmount, CashPaid, Remarks,UserName, status, SpecialAdjustment,Posted, PONo, NewCustomer,Delivery_Date, Adj_Flag, Adjustment,CostCenterId, PO_Date,EditionalTax_Percentage,SED_Percentage, Terms_And_Condition,Apprved,CustomerPhone,CustomerAddress,Approved_User, RevisionNumber) " _
            '& " VALUES(0, N'" & txtPONo.Text & "',N'" & dtpPODate.Value.ToString("yyyy-M-d h:mm:ss tt") & "'," & cmbVendor.ActiveRow.Cells(0).Value & ", " & Me.grd.GetTotal(Me.grd.RootTable.Columns("Qty"), Janus.Windows.GridEX.AggregateFunction.Sum) & "," & NetAmount & ", " & Val(txtPaid.Text) & ",N'" & txtRemarks.Text.Replace("'", "''") & "',N'" & LoginUserName & "', N'" & EnumStatus.Open.ToString & "', " & IIf(Me.rbtAdjPercentage.Checked = True, Val(Me.txtSpecialAdjustment.Text), 0) & ", " & IIf(Me.chkPost.Checked = True, 1, 0) & ", N'" & Me.txtCustPONo.Text.Replace("'", "''") & "', N'" & Me.txtNewCustomer.Text.Replace("'", "''") & "', " & IIf(Me.dtpDeliveryDate.Checked = True, "N'" & Me.dtpDeliveryDate.Value.ToString("yyyy-M-d h:mm:ss tt") & "'", "NULL") & ", " & IIf(Me.rbtAdjFlat.Checked = True, 0, 1) & ", " & IIf(Me.rbtAdjFlat.Checked = True, Adjustment, Val(Me.txtSpecialAdjustment.Text)) & ", " & Me.cmbProject.SelectedValue & ", " & IIf(Me.dtpPDate.Checked = True, "N'" & Me.dtpPDate.Value.ToString("yyyy-M-d h:mm:ss tt") & "'", "NULL") & ", " & TransitPercent & "," & WHTaxPercent & ",N'" & Me.txtTerms_And_Condition.Text.Replace("'", "''") & "', " & IIf(Me.ChkApproved.Checked = True, 1, 0) & ",N'" & Me.txtCustomerMobile.Text.Replace("'", "''").ToString & "',N'" & Me.txtCustomerAddress.Text.Replace("'", "''").ToString & "'," & IIf(ChkApproved.Checked = True, "N'" & LoginUserName.Replace("'", "''") & "'", "NULL") & ", 0)"
            'Dim QuotationId = SQLHelper.ExecuteScaler(trans, CommandType.Text, strSQL)
            strSQL = " INSERT INTO PurchaseOrderMasterTable(LocationId, PurchaseOrderNo, PurchaseOrderDate, VendorId, UserName, Status, Terms_And_Condition) " _
          & " VALUES(" & obj.LocationId & ", N'" & obj.PurchaseOrderNo & "', N'" & obj.PurchaseOrderDate.ToString("yyyy-M-d h:mm:ss tt") & "', " & obj.VendorId & ", N'" & obj.UserName & "', N'" & obj.Status & "', N'" & obj.Terms_And_Condition.Replace("'", "''") & "') Select @@Identity"
            Dim PurchaseOrderId = SQLHelper.ExecuteScaler(trans, CommandType.Text, strSQL)

            SaveVendorQuotationAttachments(PurchaseOrderId, "frmVendorQuotation", "frmPurchaseOrderNew", trans, VendorQuotationId)
            SaveInwardExpenses(PurchaseOrderId, "VQ", "PO", trans, VendorQuotationId) ''TFS3109
            AddPurchaseOrderDetail(obj.DetailList, PurchaseOrderId, trans)
            trans.Commit()
            Dim ValueTable As DataTable = GetSingleQuotation(PurchaseOrderId)
            NotificationDAL.SaveAndSendNotification("Purchase Order", "PurchaseOrderMasterTable", PurchaseOrderId, ValueTable, "Purchase > Purchase Order")
            Return True
        Catch ex As Exception
            trans.Rollback()
            Throw ex
        Finally
            Con.Close()
        End Try
    End Function
    ''' <summary>
    ''' TASK TFS2019
    ''' </summary>
    ''' <param name="obj"></param>
    ''' <param name="PurchaseOrderId"></param>
    ''' <param name="trans"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function AddPurchaseOrderDetail(ByVal obj As List(Of PurchaseOrderDetail), ByVal PurchaseOrderId As Integer, ByVal trans As SqlTransaction) As Boolean
        Dim Con As New SqlConnection(SQLHelper.CON_STR)
        If Con.State = ConnectionState.Closed Then Con.Open()
        'Dim trans As SqlTransaction = Con.BeginTransaction
        Try
            '            RequirementDescription	nvarchar(200)	Checked
            'PurchaseInquiryDetailId	int	Checked
            'VendorQuotationDetailId	int	Checked
            For Each objMod As PurchaseOrderDetail In obj
                Dim strSQL As String = String.Empty
                strSQL = " INSERT INTO PurchaseOrderDetailTable(PurchaseOrderId, LocationId, ArticleDefId, ArticleSize, Sz1,Qty,Price,Sz7,CurrentPrice, TaxPercent, PackPrice, Pack_Desc, Comments, BaseCurrencyId, BaseCurrencyRate, CurrencyId, CurrencyRate, CurrencyAmount) " _
                & " VALUES(" & PurchaseOrderId & ", " & objMod.LocationId & ",  " & objMod.ArticleDefId & ",N'" & objMod.ArticleSize & "', " & objMod.Sz1 & ", " _
                                      & " " & objMod.Qty & ", " & objMod.Price & ", 0 , " & objMod.CurrentPrice & " , " & objMod.TaxPercent & ", " & objMod.PackPrice & ", N'" & objMod.Pack_Desc.Replace("'", "''") & "', N'" & objMod.Comments.Replace("'", "''") & "', " & objMod.BaseCurrencyId & ", " & objMod.BaseCurrencyRate & ", " & objMod.CurrencyId & ", " & objMod.CurrencyRate & ", " & objMod.CurrencyAmount & ")"
                '& " Else Update QuotationDetailTable SET VendorQuotationDetailId= " & objMod.VendorQuotationDetailId & ", VendorId = " & objMod.VendorId & ", PurchaseInuiryId= " & objMod.PurchaseInuiryId & ", PurchaseInquiryDetailId= " & objMod.PurchaseInquiryDetailId & ", NetCostValue= " & objMod.NetCostValue & ", Margin= " & objMod.Margin & ", Approved= " & IIf(objMod.Approved = True, 1, 0) & ", UserName= '" & objMod.UserName.Replace("'", "''") & "', Dated= '" & objMod.Dated.ToString("yyyy-M-dd hh:mm:ss tt") & "' WHERE InquiryComparisonStatementId=" & objMod.InquiryComparisonStatementId & ""
                SQLHelper.ExecuteNonQuery(trans, CommandType.Text, strSQL)
            Next
            'trans.Commit()
            Return True
        Catch ex As Exception
            trans.Rollback()
            Throw ex
        Finally
            Con.Close()
        End Try
    End Function
    Public Function DisplayDemand(ByVal PurchaseDemandId As Integer) As DataTable
        Dim strSQL As String = String.Empty
        Try
            strSQL = "SELECT ISNULL(Detail.VendorQuotationDetailId, 0) AS VendorQuotationDetailId, ISNULL(Detail.VendorQuotationId, 0) AS VendorQuotationId, Detail.SerialNo, VendorQuotationMaster.VendorId,  COA.detail_code AS VendorCode, COA.detail_title AS Vendor, Detail.RequirementDescription, Detail.ArticleId, Article.ArticleCode AS Code, Article.ArticleDescription, ISNULL(Detail.UnitId, 0) AS UnitId, Unit.ArticleUnitName AS Unit, ISNULL(Detail.ItemTypeId, 0) AS ItemTypeId, Type.ArticleTypeName AS Type, ISNULL(Detail.CategoryId, 0) AS CategoryId, Category.ArticleCompanyName AS Category, ISNULL(Detail.SubCategoryId, 0) AS SubCategoryId, SubCategory.ArticleLpoName AS SubCategory, ISNULL(Detail.OriginId, 0) AS OriginId, Origin.ArticleGenderName AS Origin, ISNULL(Detail.Qty, 0) AS Qty, Detail.QuotedTerms, Detail.ValidityOfQuotation, Detail.DeliveryPeriod, Detail.Warranty, Detail.ApproxGrossWeight, Detail.HSCode, Detail.DeliveryPort, Detail.GenuineOrReplacement, Detail.LiteratureOrDatasheet, Detail.NewOrRefurbish, ISNULL(Detail.BaseCurrencyId, 0) AS BaseCurrencyId, ISNULL(Detail.BaseCurrencyRate, 0) AS BaseCurrencyRate, ISNULL(Detail.CurrencyId, 0) AS CurrencyId, tblcurrency.currency_code AS Currency, ISNULL(Detail.CurrencyRate, 0) AS CurrencyRate, Detail.CurrencySymbol, ISNULL(Detail.Price, 0) AS Price, ISNULL(Detail.DiscountPer, 0) AS DiscountPer, CONVERT(float, 0) AS DiscountAmount, ISNULL(Detail.SalesTaxPer, 0) AS SalesTaxPer, CONVERT(float, 0) AS SalesTaxAmount, ISNULL(Detail.AddTaxPer, 0) AS AddTaxPer, CONVERT(float, 0) AS AddTaxAmount, ISNULL(Detail.IncTaxPer, 0) AS IncTaxPer, CONVERT(float, 0) AS IncTaxAmount, ISNULL(Detail.CDPer, 0) AS CDPer, CONVERT(float, 0) AS CDAmount, ISNULL(Detail.NetPrice, 0) AS NetPrice, ISNULL(Detail.NetPrice, 0) * ISNULL(Detail.Qty, 0) AS Amount, ISNULL(Detail.OtherCharges, 0) AS OtherCharges, CONVERT(float, 0) AS NetCostValue, ISNULL(ComparisonStatement.Margin, 0) AS Margin, ISNULL(ComparisonStatement.QuotedCostValue, 0) AS QuotedCostValue, ISNULL(VendorQuotationMaster.PurchaseInquiryId, 0) AS PurchaseInquiryId, Detail.PurchaseInquiryDetailId, Detail.ReferenceNo, Detail.Comments, ISNULL(Detail.HeadArticleId, 0) AS HeadArticleId, ISNULL(Detail.Alternate, 0) AS Alternate, CONVERT(Bit, ISNULL(ComparisonStatement.Approved, 0)) AS Approved, ISNULL(ComparisonStatement.InquiryComparisonStatementId, 0) AS InquiryComparisonStatementId FROM ArticleTypeDefTable AS Type RIGHT OUTER JOIN PurchaseInquiryMaster INNER JOIN VendorQuotationDetail AS Detail INNER JOIN VendorQuotationMaster ON Detail.VendorQuotationId = VendorQuotationMaster.VendorQuotationId ON PurchaseInquiryMaster.PurchaseInquiryId = VendorQuotationMaster.PurchaseInquiryId LEFT OUTER JOIN PurchaseDemandMasterTable ON PurchaseInquiryMaster.PurchaseDemandId = PurchaseDemandMasterTable.PurchaseDemandId LEFT OUTER JOIN vwCOADetail AS COA ON VendorQuotationMaster.VendorId = COA.coa_detail_id LEFT OUTER JOIN InquiryComparisonStatement AS ComparisonStatement ON Detail.VendorQuotationDetailId = ComparisonStatement.VendorQuotationDetailId LEFT OUTER JOIN ArticleDefTable AS Article ON Detail.ArticleId = Article.ArticleId LEFT OUTER JOIN ArticleUnitDefTable AS Unit ON Detail.UnitId = Unit.ArticleUnitId ON Type.ArticleTypeId = Detail.ItemTypeId LEFT OUTER JOIN ArticleCompanyDefTable AS Category ON Detail.CategoryId = Category.ArticleCompanyId LEFT OUTER JOIN ArticleLpoDefTable AS SubCategory ON Detail.SubCategoryId = SubCategory.ArticleLpoId LEFT OUTER JOIN ArticleGenderDefTable AS Origin ON Detail.OriginId = Origin.ArticleGenderId LEFT OUTER JOIN tblcurrency ON Detail.CurrencyId = tblcurrency.currency_id WHERE (ISNULL(Detail.Qty, 0) > 0) AND (ISNULL(ComparisonStatement.Approved, 0) = 0)"

            If PurchaseDemandId > 0 Then
                strSQL += " And  PurchaseDemandMasterTable.PurchaseDemandId = " & PurchaseDemandId & ""
            End If
            ''Start TFS3694: Ayesha Rehman : Item Sequence not according to Serial no
            strSQL += " order by  CAST(Detail.SerialNo AS Numeric(10,0)) Asc "
            ''End TFS3694
            Dim dt As New DataTable
            dt = UtilityDAL.GetDataTable(strSQL)
            dt.Columns("DiscountAmount").Expression = "(IsNull(Price, 0)*IsNull(DiscountPer, 0))/100"
            dt.Columns("SalesTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(SalesTaxPer, 0))/100"
            dt.Columns("AddTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(AddTaxPer, 0))/100"
            dt.Columns("IncTaxAmount").Expression = "(IsNull(Price, 0)*IsNull(IncTaxPer, 0))/100"
            dt.Columns("CDAmount").Expression = "(IsNull(Price, 0)*IsNull(CDPer, 0))/100"
            dt.Columns("NetPrice").Expression = "(IsNull(Price, 0)-DiscountAmount)+SalesTaxAmount+AddTaxAmount+IncTaxAmount+CDAmount"
            dt.Columns("NetCostValue").Expression = "IsNull(Amount, 0)"
            dt.Columns("QuotedCostValue").Expression = "(IsNull(NetCostValue, 0) + (IsNull(NetCostValue, 0)* IsNull(Margin, 0))/100)"
            Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Function
End Class
