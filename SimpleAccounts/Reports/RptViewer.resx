<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAZjM4ft+vllZXp88Itqum/HWvIizaGjxoAAAAAAAAAALbLy1C+1c3/obCofwAAAAUAAAAKAAAACQAA
        AAYAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAWU6f+t+P//jfL//zm/+f8wkuf/Zfj/3gAAAADAxMOckJua/6zEwf+vxb//b3JtYgAA
        ABUAAAASAAAADQAAAAUAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAC709UUx9jak5yrqu1/hoP/lJqX/9bc
        2//u8/P/2uHg/9fazdSmucioE63y/2Dl//9R1fn/NLLy/x2Y6v9f1v7/8eXa/7K0s/+SnJv/pLm1/5us
        qP+mt7V/bbO6ZSiPv38TTo1UEyEeCwAAAAIAAAAAAAAAAAAAAAAAAAAAqbu8pNPU0//Z0tH/X19a/2Vu
        av+OlJP/ycjF//v6+v/n6ef/z8fE/7q5sv9U2fn/JMT//xq0/v8Cm/P/AIHr/zuY4P/u3tP/r7u3/6a4
        uP+esK7/laOY/6nl9/+H/f//OMj//yyO9v95///4AAAAGQAAAAcAAAABAAAAAJemp+5TTUf/zMrI/+Pn
        5v+HnJv/m7Gz/5ynqP/T1tb/+f3+/+jv8f/c4uP/tLCq/7S/v/9/ssL/XpO4/2KUvP99qb7/tLqw/+no
        4v/F1NT/rL6//5qqpv+Okoj/mdPk/3zs//8yuvD/LI3f/2v///8AAAAAAAAAAAAAAAAAAAAAmaio/4GR
        j//c5eT/6e7t/5WsrP+ara7/j5OR/+Tt7f/09/f/5+3t/+Tu7/+9xMP/q7Ow/7C6uP+kraH/sbSu/6az
        sf+7yMf/7vLx/8vb3P+vwcL/l6Of/4aEef+Y0OH/fOv//zC57v8oh97/aPf//wAAAAAAAAAAAAAAAAAA
        AACnu7v/ma+w/9vh4f/SzMz/jZ2d/56ys/+RlpX/6vP0//T29v/p7/D/4uzt/8vV1v+coaH/rcTF/6a9
        wv+Sppz/dYhx/83a3f/v9Pb/zdzd/7HExf+aqaX/hIF3/5bN3P9+7P//Mrrv/yiE3v9h5v//AAAAAAAA
        AAAAAAAAAAAAAKi7vP+mu73/0NLS/8fFw/+PoKH/pbm7/5OXlf/t9vj/9ff5/+vx8f/k7/D/0d3e/5mh
        n/+1z9H/vNTc/15sQv85RhD/ydfY//P6/P/S4uT/tMnK/6a5uf+Xnpf/mM/h/3vp//8wue//JoLc/1zb
        9f8AAAAAAAAAAAAAAAAAAAAAqr2+/6fAwf/c4uL/5+rq/7DExf+vx8j/m6Oi/+Tr6//6/f3/7PP0/+r2
        9//N19f/pK6s/77a3f/B2+D/oLSs/5quo//S4+f/6O7u/9Tl5v+lsrL/rMHB/6m9uP+g1+b/fuj//zG5
        7/8mf9r/W9fx/wAAAAAAAAAAAAAAAAAAAACrv8D/r8LD/+nw8P/v8/T/orS0/52wr/+ptrX/0dXU//7/
        ///y+vv/8Pv8/77Ew/+6y87/pbm4/56xsP+htLb/l6ut/7nExP/l5+f/xNDP/4yXlv+3z9D/vMjC/6nc
        6v946f//N73x/y+I3f9n4fL/AAAAAAAAAAAAAAAAAAAAAK/DxP+vwMD/3d/f/+Tl4/+Nm5r/lqin/5KV
        kv/Mzcv/9O7u/+fp6P/OzMr/q6qn/6ixsP+Ompn/jJmX/36JhP+MnJn/wc3N/+jo6P/D1NT/yODh/+Tt
        4//W3uD/ZdPz/1DJ+P82q/D/JZLp/0G+8f8AAAAAAAAAAAAAAAAAAAAAorOz/4aPjf/f5eP/3uXl/627
        uv+ywsL/xdfV/9fp5//W6On/1OTl/9Hf3//Bzs7/o6mn/4KIhf95fHv/jZWT/7DDw/++z87/x9jY/9Dd
        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
        QP//wED//+BA////wP///8D////A//////8=
</value>
  </data>
</root>