'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18408
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("dsSalarySheet"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class dsSalarySheet
    Inherits Global.System.Data.DataSet

    Private tabledsSalarySheet As dsSalarySheetDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("dsSalarySheet")) Is Nothing) Then
                MyBase.Tables.Add(New dsSalarySheetDataTable(ds.Tables("dsSalarySheet")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property _dsSalarySheet() As dsSalarySheetDataTable
        Get
            Return Me.tabledsSalarySheet
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsSalarySheet = CType(MyBase.Clone, dsSalarySheet)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("dsSalarySheet")) Is Nothing) Then
                MyBase.Tables.Add(New dsSalarySheetDataTable(ds.Tables("dsSalarySheet")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabledsSalarySheet = CType(MyBase.Tables("dsSalarySheet"), dsSalarySheetDataTable)
        If (initTable = True) Then
            If (Not (Me.tabledsSalarySheet) Is Nothing) Then
                Me.tabledsSalarySheet.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "dsSalarySheet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsSalarySheet.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabledsSalarySheet = New dsSalarySheetDataTable()
        MyBase.Tables.Add(Me.tabledsSalarySheet)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerialize_dsSalarySheet() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsSalarySheet = New dsSalarySheet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub dsSalarySheetRowChangeEventHandler(ByVal sender As Object, ByVal e As dsSalarySheetRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class dsSalarySheetDataTable
        Inherits Global.System.Data.TypedTableBase(Of dsSalarySheetRow)

        Private columnDept_Id As Global.System.Data.DataColumn

        Private columnDesig_Id As Global.System.Data.DataColumn

        Private columnShiftGroupId As Global.System.Data.DataColumn

        Private columnCity_Id As Global.System.Data.DataColumn

        Private columnSalaryExpAcId As Global.System.Data.DataColumn

        Private columnEmployee_Id As Global.System.Data.DataColumn

        Private columnEmployee_Code As Global.System.Data.DataColumn

        Private columnEmployee_Name As Global.System.Data.DataColumn

        Private columnDesignation As Global.System.Data.DataColumn

        Private columnDepartment As Global.System.Data.DataColumn

        Private columnSalary As Global.System.Data.DataColumn

        Private columnEmpSalaryAccountId As Global.System.Data.DataColumn

        Private columnCostCentre As Global.System.Data.DataColumn

        Private columnCost_Centre As Global.System.Data.DataColumn

        Private columnProcessId As Global.System.Data.DataColumn

        Private columnSalaryExpId As Global.System.Data.DataColumn

        Private columnMonthDays As Global.System.Data.DataColumn

        Private columnWorkingDays As Global.System.Data.DataColumn

        Private columnTotalLeaves As Global.System.Data.DataColumn

        Private columnPrvLeave As Global.System.Data.DataColumn

        Private columnLeaveDays As Global.System.Data.DataColumn

        Private columnLeaveBalance As Global.System.Data.DataColumn

        Private columnPresentDays As Global.System.Data.DataColumn

        Private columnAbsentDays As Global.System.Data.DataColumn

        Private columnLeavDeduction As Global.System.Data.DataColumn

        Private columnOverTimeHrs As Global.System.Data.DataColumn

        Private columnOT_Amount As Global.System.Data.DataColumn

        Private column_IncomeTax As Global.System.Data.DataColumn

        Private column_taxableIncome As Global.System.Data.DataColumn

        Private columnGross_Salary As Global.System.Data.DataColumn

        Private columnAbsent_Deduction As Global.System.Data.DataColumn

        Private columnLoan_Deduction As Global.System.Data.DataColumn

        Private columnIncom_tax_at_salary As Global.System.Data.DataColumn

        Private columnMedical_Allownce As Global.System.Data.DataColumn

        Private columnConveyance_Allownce As Global.System.Data.DataColumn

        Private columnSite_Visit_Allownce As Global.System.Data.DataColumn

        Private columnDearness_Allownce As Global.System.Data.DataColumn

        Private columnEOBI_Contribution As Global.System.Data.DataColumn

        Private columnUniform_Deduction As Global.System.Data.DataColumn

        Private columnSite_Visit_Deduction As Global.System.Data.DataColumn

        Private columnFine_and_Penality As Global.System.Data.DataColumn

        Private columnOver_Time As Global.System.Data.DataColumn

        Private columnTotal_Salary As Global.System.Data.DataColumn

        Private columnProvident_Fund As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "dsSalarySheet"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Dept_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDept_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Desig_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesig_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ShiftGroupIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShiftGroupId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property City_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCity_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SalaryExpAcIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalaryExpAcId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Employee_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmployee_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Employee_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmployee_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Employee_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmployee_Name
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DesignationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesignation
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DepartmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepartment
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SalaryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalary
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EmpSalaryAccountIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpSalaryAccountId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CostCentreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCostCentre
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Cost_CentreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCost_Centre
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ProcessIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcessId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SalaryExpIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalaryExpId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MonthDaysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonthDays
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property WorkingDaysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWorkingDays
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalLeavesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalLeaves
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrvLeaveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrvLeave
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LeaveDaysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLeaveDays
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LeaveBalanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLeaveBalance
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresentDaysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresentDays
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AbsentDaysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbsentDays
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LeavDeductionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLeavDeduction
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OverTimeHrsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverTimeHrs
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OT_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOT_Amount
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property _IncomeTaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column_IncomeTax
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property _taxableIncomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column_taxableIncome
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Gross_SalaryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGross_Salary
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Absent_DeductionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbsent_Deduction
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Loan_DeductionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoan_Deduction
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Incom_tax_at_salaryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncom_tax_at_salary
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Medical_AllownceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedical_Allownce
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Conveyance_AllownceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConveyance_Allownce
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Site_Visit_AllownceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSite_Visit_Allownce
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Dearness_AllownceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDearness_Allownce
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EOBI_ContributionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEOBI_Contribution
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Uniform_DeductionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUniform_Deduction
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Site_Visit_DeductionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSite_Visit_Deduction
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Fine_and_PenalityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFine_and_Penality
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Over_TimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOver_Time
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Total_SalaryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Salary
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Provident_FundColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProvident_Fund
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As dsSalarySheetRow
            Get
                Return CType(Me.Rows(index), dsSalarySheetRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event dsSalarySheetRowChanging As dsSalarySheetRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event dsSalarySheetRowChanged As dsSalarySheetRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event dsSalarySheetRowDeleting As dsSalarySheetRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event dsSalarySheetRowDeleted As dsSalarySheetRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AdddsSalarySheetRow(ByVal row As dsSalarySheetRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AdddsSalarySheetRow( _
                    ByVal Dept_Id As Integer, _
                    ByVal Desig_Id As Integer, _
                    ByVal ShiftGroupId As Integer, _
                    ByVal City_Id As Integer, _
                    ByVal SalaryExpAcId As Integer, _
                    ByVal Employee_Id As Integer, _
                    ByVal Employee_Code As String, _
                    ByVal Employee_Name As String, _
                    ByVal Designation As String, _
                    ByVal Department As String, _
                    ByVal Salary As Decimal, _
                    ByVal EmpSalaryAccountId As Integer, _
                    ByVal CostCentre As Integer, _
                    ByVal Cost_Centre As String, _
                    ByVal ProcessId As Integer, _
                    ByVal SalaryExpId As Integer, _
                    ByVal MonthDays As Double, _
                    ByVal WorkingDays As Double, _
                    ByVal TotalLeaves As Double, _
                    ByVal PrvLeave As Double, _
                    ByVal LeaveDays As Double, _
                    ByVal LeaveBalance As Double, _
                    ByVal PresentDays As Double, _
                    ByVal AbsentDays As Double, _
                    ByVal LeavDeduction As Decimal, _
                    ByVal OverTimeHrs As Double, _
                    ByVal OT_Amount As Decimal, _
                    ByVal _IncomeTax As Decimal, _
                    ByVal _taxableIncome As Decimal, _
                    ByVal Gross_Salary As Decimal, _
                    ByVal Absent_Deduction As Decimal, _
                    ByVal Loan_Deduction As Decimal, _
                    ByVal Incom_tax_at_salary As Decimal, _
                    ByVal Medical_Allownce As Decimal, _
                    ByVal Conveyance_Allownce As Decimal, _
                    ByVal Site_Visit_Allownce As Decimal, _
                    ByVal Dearness_Allownce As Decimal, _
                    ByVal EOBI_Contribution As Decimal, _
                    ByVal Uniform_Deduction As Decimal, _
                    ByVal Site_Visit_Deduction As Decimal, _
                    ByVal Fine_and_Penality As Decimal, _
                    ByVal Over_Time As Decimal, _
                    ByVal Total_Salary As Decimal, _
                    ByVal Provident_Fund As Decimal) As dsSalarySheetRow
            Dim rowdsSalarySheetRow As dsSalarySheetRow = CType(Me.NewRow, dsSalarySheetRow)
            Dim columnValuesArray() As Object = New Object() {Dept_Id, Desig_Id, ShiftGroupId, City_Id, SalaryExpAcId, Employee_Id, Employee_Code, Employee_Name, Designation, Department, Salary, EmpSalaryAccountId, CostCentre, Cost_Centre, ProcessId, SalaryExpId, MonthDays, WorkingDays, TotalLeaves, PrvLeave, LeaveDays, LeaveBalance, PresentDays, AbsentDays, LeavDeduction, OverTimeHrs, OT_Amount, _IncomeTax, _taxableIncome, Gross_Salary, Absent_Deduction, Loan_Deduction, Incom_tax_at_salary, Medical_Allownce, Conveyance_Allownce, Site_Visit_Allownce, Dearness_Allownce, EOBI_Contribution, Uniform_Deduction, Site_Visit_Deduction, Fine_and_Penality, Over_Time, Total_Salary, Provident_Fund}
            rowdsSalarySheetRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdsSalarySheetRow)
            Return rowdsSalarySheetRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dsSalarySheetDataTable = CType(MyBase.Clone, dsSalarySheetDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dsSalarySheetDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnDept_Id = MyBase.Columns("Dept_Id")
            Me.columnDesig_Id = MyBase.Columns("Desig_Id")
            Me.columnShiftGroupId = MyBase.Columns("ShiftGroupId")
            Me.columnCity_Id = MyBase.Columns("City_Id")
            Me.columnSalaryExpAcId = MyBase.Columns("SalaryExpAcId")
            Me.columnEmployee_Id = MyBase.Columns("Employee_Id")
            Me.columnEmployee_Code = MyBase.Columns("Employee_Code")
            Me.columnEmployee_Name = MyBase.Columns("Employee_Name")
            Me.columnDesignation = MyBase.Columns("Designation")
            Me.columnDepartment = MyBase.Columns("Department")
            Me.columnSalary = MyBase.Columns("Salary")
            Me.columnEmpSalaryAccountId = MyBase.Columns("EmpSalaryAccountId")
            Me.columnCostCentre = MyBase.Columns("CostCentre")
            Me.columnCost_Centre = MyBase.Columns("Cost Centre")
            Me.columnProcessId = MyBase.Columns("ProcessId")
            Me.columnSalaryExpId = MyBase.Columns("SalaryExpId")
            Me.columnMonthDays = MyBase.Columns("MonthDays")
            Me.columnWorkingDays = MyBase.Columns("WorkingDays")
            Me.columnTotalLeaves = MyBase.Columns("TotalLeaves")
            Me.columnPrvLeave = MyBase.Columns("PrvLeave")
            Me.columnLeaveDays = MyBase.Columns("LeaveDays")
            Me.columnLeaveBalance = MyBase.Columns("LeaveBalance")
            Me.columnPresentDays = MyBase.Columns("PresentDays")
            Me.columnAbsentDays = MyBase.Columns("AbsentDays")
            Me.columnLeavDeduction = MyBase.Columns("LeavDeduction")
            Me.columnOverTimeHrs = MyBase.Columns("OverTimeHrs")
            Me.columnOT_Amount = MyBase.Columns("OT_Amount")
            Me.column_IncomeTax = MyBase.Columns("_IncomeTax")
            Me.column_taxableIncome = MyBase.Columns("_taxableIncome")
            Me.columnGross_Salary = MyBase.Columns("Gross Salary")
            Me.columnAbsent_Deduction = MyBase.Columns("Absent Deduction")
            Me.columnLoan_Deduction = MyBase.Columns("Loan Deduction")
            Me.columnIncom_tax_at_salary = MyBase.Columns("Incom tax at salary")
            Me.columnMedical_Allownce = MyBase.Columns("Medical Allownce")
            Me.columnConveyance_Allownce = MyBase.Columns("Conveyance Allownce")
            Me.columnSite_Visit_Allownce = MyBase.Columns("Site Visit Allownce")
            Me.columnDearness_Allownce = MyBase.Columns("Dearness Allownce")
            Me.columnEOBI_Contribution = MyBase.Columns("EOBI Contribution")
            Me.columnUniform_Deduction = MyBase.Columns("Uniform Deduction")
            Me.columnSite_Visit_Deduction = MyBase.Columns("Site Visit Deduction")
            Me.columnFine_and_Penality = MyBase.Columns("Fine and Penality")
            Me.columnOver_Time = MyBase.Columns("Over Time")
            Me.columnTotal_Salary = MyBase.Columns("Total Salary")
            Me.columnProvident_Fund = MyBase.Columns("Provident Fund")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnDept_Id = New Global.System.Data.DataColumn("Dept_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDept_Id)
            Me.columnDesig_Id = New Global.System.Data.DataColumn("Desig_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesig_Id)
            Me.columnShiftGroupId = New Global.System.Data.DataColumn("ShiftGroupId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShiftGroupId)
            Me.columnCity_Id = New Global.System.Data.DataColumn("City_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCity_Id)
            Me.columnSalaryExpAcId = New Global.System.Data.DataColumn("SalaryExpAcId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalaryExpAcId)
            Me.columnEmployee_Id = New Global.System.Data.DataColumn("Employee_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmployee_Id)
            Me.columnEmployee_Code = New Global.System.Data.DataColumn("Employee_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmployee_Code)
            Me.columnEmployee_Name = New Global.System.Data.DataColumn("Employee_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmployee_Name)
            Me.columnDesignation = New Global.System.Data.DataColumn("Designation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesignation)
            Me.columnDepartment = New Global.System.Data.DataColumn("Department", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepartment)
            Me.columnSalary = New Global.System.Data.DataColumn("Salary", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalary)
            Me.columnEmpSalaryAccountId = New Global.System.Data.DataColumn("EmpSalaryAccountId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpSalaryAccountId)
            Me.columnCostCentre = New Global.System.Data.DataColumn("CostCentre", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCostCentre)
            Me.columnCost_Centre = New Global.System.Data.DataColumn("Cost Centre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCost_Centre)
            Me.columnProcessId = New Global.System.Data.DataColumn("ProcessId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcessId)
            Me.columnSalaryExpId = New Global.System.Data.DataColumn("SalaryExpId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalaryExpId)
            Me.columnMonthDays = New Global.System.Data.DataColumn("MonthDays", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonthDays)
            Me.columnWorkingDays = New Global.System.Data.DataColumn("WorkingDays", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWorkingDays)
            Me.columnTotalLeaves = New Global.System.Data.DataColumn("TotalLeaves", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalLeaves)
            Me.columnPrvLeave = New Global.System.Data.DataColumn("PrvLeave", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrvLeave)
            Me.columnLeaveDays = New Global.System.Data.DataColumn("LeaveDays", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLeaveDays)
            Me.columnLeaveBalance = New Global.System.Data.DataColumn("LeaveBalance", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLeaveBalance)
            Me.columnPresentDays = New Global.System.Data.DataColumn("PresentDays", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresentDays)
            Me.columnAbsentDays = New Global.System.Data.DataColumn("AbsentDays", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbsentDays)
            Me.columnLeavDeduction = New Global.System.Data.DataColumn("LeavDeduction", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLeavDeduction)
            Me.columnOverTimeHrs = New Global.System.Data.DataColumn("OverTimeHrs", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverTimeHrs)
            Me.columnOT_Amount = New Global.System.Data.DataColumn("OT_Amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOT_Amount)
            Me.column_IncomeTax = New Global.System.Data.DataColumn("_IncomeTax", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.column_IncomeTax)
            Me.column_taxableIncome = New Global.System.Data.DataColumn("_taxableIncome", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.column_taxableIncome)
            Me.columnGross_Salary = New Global.System.Data.DataColumn("Gross Salary", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGross_Salary)
            Me.columnAbsent_Deduction = New Global.System.Data.DataColumn("Absent Deduction", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbsent_Deduction)
            Me.columnLoan_Deduction = New Global.System.Data.DataColumn("Loan Deduction", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoan_Deduction)
            Me.columnIncom_tax_at_salary = New Global.System.Data.DataColumn("Incom tax at salary", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncom_tax_at_salary)
            Me.columnMedical_Allownce = New Global.System.Data.DataColumn("Medical Allownce", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedical_Allownce)
            Me.columnConveyance_Allownce = New Global.System.Data.DataColumn("Conveyance Allownce", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConveyance_Allownce)
            Me.columnSite_Visit_Allownce = New Global.System.Data.DataColumn("Site Visit Allownce", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSite_Visit_Allownce)
            Me.columnDearness_Allownce = New Global.System.Data.DataColumn("Dearness Allownce", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDearness_Allownce)
            Me.columnEOBI_Contribution = New Global.System.Data.DataColumn("EOBI Contribution", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEOBI_Contribution)
            Me.columnUniform_Deduction = New Global.System.Data.DataColumn("Uniform Deduction", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUniform_Deduction)
            Me.columnSite_Visit_Deduction = New Global.System.Data.DataColumn("Site Visit Deduction", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSite_Visit_Deduction)
            Me.columnFine_and_Penality = New Global.System.Data.DataColumn("Fine and Penality", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFine_and_Penality)
            Me.columnOver_Time = New Global.System.Data.DataColumn("Over Time", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOver_Time)
            Me.columnTotal_Salary = New Global.System.Data.DataColumn("Total Salary", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Salary)
            Me.columnProvident_Fund = New Global.System.Data.DataColumn("Provident Fund", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProvident_Fund)
            Me.ExtendedProperties.Add("Generator_TablePropName", "_dsSalarySheet")
            Me.ExtendedProperties.Add("Generator_UserTableName", "dsSalarySheet")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewdsSalarySheetRow() As dsSalarySheetRow
            Return CType(Me.NewRow, dsSalarySheetRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dsSalarySheetRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dsSalarySheetRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dsSalarySheetRowChangedEvent) Is Nothing) Then
                RaiseEvent dsSalarySheetRowChanged(Me, New dsSalarySheetRowChangeEvent(CType(e.Row, dsSalarySheetRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dsSalarySheetRowChangingEvent) Is Nothing) Then
                RaiseEvent dsSalarySheetRowChanging(Me, New dsSalarySheetRowChangeEvent(CType(e.Row, dsSalarySheetRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dsSalarySheetRowDeletedEvent) Is Nothing) Then
                RaiseEvent dsSalarySheetRowDeleted(Me, New dsSalarySheetRowChangeEvent(CType(e.Row, dsSalarySheetRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dsSalarySheetRowDeletingEvent) Is Nothing) Then
                RaiseEvent dsSalarySheetRowDeleting(Me, New dsSalarySheetRowChangeEvent(CType(e.Row, dsSalarySheetRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovedsSalarySheetRow(ByVal row As dsSalarySheetRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSalarySheet = New dsSalarySheet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dsSalarySheetDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dsSalarySheetRow
        Inherits Global.System.Data.DataRow

        Private tabledsSalarySheet As dsSalarySheetDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledsSalarySheet = CType(Me.Table, dsSalarySheetDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Dept_Id() As Integer
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Dept_IdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dept_Id' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabledsSalarySheet.Dept_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Desig_Id() As Integer
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Desig_IdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Desig_Id' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabledsSalarySheet.Desig_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ShiftGroupId() As Integer
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.ShiftGroupIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShiftGroupId' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabledsSalarySheet.ShiftGroupIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property City_Id() As Integer
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.City_IdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'City_Id' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabledsSalarySheet.City_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SalaryExpAcId() As Integer
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.SalaryExpAcIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalaryExpAcId' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabledsSalarySheet.SalaryExpAcIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Employee_Id() As Integer
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Employee_IdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Employee_Id' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabledsSalarySheet.Employee_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Employee_Code() As String
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Employee_CodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Employee_Code' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledsSalarySheet.Employee_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Employee_Name() As String
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Employee_NameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Employee_Name' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledsSalarySheet.Employee_NameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Designation() As String
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.DesignationColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Designation' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledsSalarySheet.DesignationColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Department() As String
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.DepartmentColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Department' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledsSalarySheet.DepartmentColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Salary() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.SalaryColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Salary' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.SalaryColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EmpSalaryAccountId() As Integer
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.EmpSalaryAccountIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EmpSalaryAccountId' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabledsSalarySheet.EmpSalaryAccountIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CostCentre() As Integer
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.CostCentreColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CostCentre' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabledsSalarySheet.CostCentreColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cost_Centre() As String
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Cost_CentreColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cost Centre' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledsSalarySheet.Cost_CentreColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ProcessId() As Integer
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.ProcessIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProcessId' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabledsSalarySheet.ProcessIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SalaryExpId() As Integer
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.SalaryExpIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalaryExpId' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabledsSalarySheet.SalaryExpIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MonthDays() As Double
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.MonthDaysColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MonthDays' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tabledsSalarySheet.MonthDaysColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property WorkingDays() As Double
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.WorkingDaysColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WorkingDays' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tabledsSalarySheet.WorkingDaysColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TotalLeaves() As Double
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.TotalLeavesColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalLeaves' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tabledsSalarySheet.TotalLeavesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrvLeave() As Double
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.PrvLeaveColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrvLeave' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tabledsSalarySheet.PrvLeaveColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LeaveDays() As Double
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.LeaveDaysColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LeaveDays' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tabledsSalarySheet.LeaveDaysColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LeaveBalance() As Double
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.LeaveBalanceColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LeaveBalance' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tabledsSalarySheet.LeaveBalanceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresentDays() As Double
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.PresentDaysColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresentDays' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tabledsSalarySheet.PresentDaysColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AbsentDays() As Double
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.AbsentDaysColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AbsentDays' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tabledsSalarySheet.AbsentDaysColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LeavDeduction() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.LeavDeductionColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LeavDeduction' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.LeavDeductionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OverTimeHrs() As Double
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.OverTimeHrsColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverTimeHrs' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tabledsSalarySheet.OverTimeHrsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OT_Amount() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.OT_AmountColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OT_Amount' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.OT_AmountColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _IncomeTax() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet._IncomeTaxColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '_IncomeTax' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet._IncomeTaxColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _taxableIncome() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet._taxableIncomeColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '_taxableIncome' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet._taxableIncomeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Gross_Salary() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Gross_SalaryColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Gross Salary' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.Gross_SalaryColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Absent_Deduction() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Absent_DeductionColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Absent Deduction' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.Absent_DeductionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Loan_Deduction() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Loan_DeductionColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Loan Deduction' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.Loan_DeductionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Incom_tax_at_salary() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Incom_tax_at_salaryColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Incom tax at salary' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.Incom_tax_at_salaryColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Medical_Allownce() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Medical_AllownceColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Medical Allownce' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.Medical_AllownceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Conveyance_Allownce() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Conveyance_AllownceColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Conveyance Allownce' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.Conveyance_AllownceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Site_Visit_Allownce() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Site_Visit_AllownceColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Site Visit Allownce' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.Site_Visit_AllownceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Dearness_Allownce() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Dearness_AllownceColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dearness Allownce' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.Dearness_AllownceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EOBI_Contribution() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.EOBI_ContributionColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EOBI Contribution' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.EOBI_ContributionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Uniform_Deduction() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Uniform_DeductionColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Uniform Deduction' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.Uniform_DeductionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Site_Visit_Deduction() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Site_Visit_DeductionColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Site Visit Deduction' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.Site_Visit_DeductionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Fine_and_Penality() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Fine_and_PenalityColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fine and Penality' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.Fine_and_PenalityColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Over_Time() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Over_TimeColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Over Time' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.Over_TimeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Total_Salary() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Total_SalaryColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total Salary' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.Total_SalaryColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Provident_Fund() As Decimal
            Get
                Try
                    Return CType(Me(Me.tabledsSalarySheet.Provident_FundColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Provident Fund' in table 'dsSalarySheet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tabledsSalarySheet.Provident_FundColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDept_IdNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Dept_IdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDept_IdNull()
            Me(Me.tabledsSalarySheet.Dept_IdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDesig_IdNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Desig_IdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDesig_IdNull()
            Me(Me.tabledsSalarySheet.Desig_IdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsShiftGroupIdNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.ShiftGroupIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetShiftGroupIdNull()
            Me(Me.tabledsSalarySheet.ShiftGroupIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCity_IdNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.City_IdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCity_IdNull()
            Me(Me.tabledsSalarySheet.City_IdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSalaryExpAcIdNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.SalaryExpAcIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSalaryExpAcIdNull()
            Me(Me.tabledsSalarySheet.SalaryExpAcIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEmployee_IdNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Employee_IdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEmployee_IdNull()
            Me(Me.tabledsSalarySheet.Employee_IdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEmployee_CodeNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Employee_CodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEmployee_CodeNull()
            Me(Me.tabledsSalarySheet.Employee_CodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEmployee_NameNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Employee_NameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEmployee_NameNull()
            Me(Me.tabledsSalarySheet.Employee_NameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDesignationNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.DesignationColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDesignationNull()
            Me(Me.tabledsSalarySheet.DesignationColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDepartmentNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.DepartmentColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDepartmentNull()
            Me(Me.tabledsSalarySheet.DepartmentColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSalaryNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.SalaryColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSalaryNull()
            Me(Me.tabledsSalarySheet.SalaryColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEmpSalaryAccountIdNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.EmpSalaryAccountIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEmpSalaryAccountIdNull()
            Me(Me.tabledsSalarySheet.EmpSalaryAccountIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCostCentreNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.CostCentreColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCostCentreNull()
            Me(Me.tabledsSalarySheet.CostCentreColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCost_CentreNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Cost_CentreColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCost_CentreNull()
            Me(Me.tabledsSalarySheet.Cost_CentreColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsProcessIdNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.ProcessIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetProcessIdNull()
            Me(Me.tabledsSalarySheet.ProcessIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSalaryExpIdNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.SalaryExpIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSalaryExpIdNull()
            Me(Me.tabledsSalarySheet.SalaryExpIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMonthDaysNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.MonthDaysColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMonthDaysNull()
            Me(Me.tabledsSalarySheet.MonthDaysColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsWorkingDaysNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.WorkingDaysColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetWorkingDaysNull()
            Me(Me.tabledsSalarySheet.WorkingDaysColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotalLeavesNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.TotalLeavesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotalLeavesNull()
            Me(Me.tabledsSalarySheet.TotalLeavesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrvLeaveNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.PrvLeaveColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrvLeaveNull()
            Me(Me.tabledsSalarySheet.PrvLeaveColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLeaveDaysNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.LeaveDaysColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLeaveDaysNull()
            Me(Me.tabledsSalarySheet.LeaveDaysColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLeaveBalanceNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.LeaveBalanceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLeaveBalanceNull()
            Me(Me.tabledsSalarySheet.LeaveBalanceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresentDaysNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.PresentDaysColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresentDaysNull()
            Me(Me.tabledsSalarySheet.PresentDaysColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAbsentDaysNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.AbsentDaysColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAbsentDaysNull()
            Me(Me.tabledsSalarySheet.AbsentDaysColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLeavDeductionNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.LeavDeductionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLeavDeductionNull()
            Me(Me.tabledsSalarySheet.LeavDeductionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOverTimeHrsNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.OverTimeHrsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOverTimeHrsNull()
            Me(Me.tabledsSalarySheet.OverTimeHrsColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOT_AmountNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.OT_AmountColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOT_AmountNull()
            Me(Me.tabledsSalarySheet.OT_AmountColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_IncomeTaxNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet._IncomeTaxColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_IncomeTaxNull()
            Me(Me.tabledsSalarySheet._IncomeTaxColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_taxableIncomeNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet._taxableIncomeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_taxableIncomeNull()
            Me(Me.tabledsSalarySheet._taxableIncomeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGross_SalaryNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Gross_SalaryColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGross_SalaryNull()
            Me(Me.tabledsSalarySheet.Gross_SalaryColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAbsent_DeductionNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Absent_DeductionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAbsent_DeductionNull()
            Me(Me.tabledsSalarySheet.Absent_DeductionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLoan_DeductionNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Loan_DeductionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLoan_DeductionNull()
            Me(Me.tabledsSalarySheet.Loan_DeductionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIncom_tax_at_salaryNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Incom_tax_at_salaryColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIncom_tax_at_salaryNull()
            Me(Me.tabledsSalarySheet.Incom_tax_at_salaryColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMedical_AllownceNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Medical_AllownceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMedical_AllownceNull()
            Me(Me.tabledsSalarySheet.Medical_AllownceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsConveyance_AllownceNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Conveyance_AllownceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetConveyance_AllownceNull()
            Me(Me.tabledsSalarySheet.Conveyance_AllownceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSite_Visit_AllownceNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Site_Visit_AllownceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSite_Visit_AllownceNull()
            Me(Me.tabledsSalarySheet.Site_Visit_AllownceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDearness_AllownceNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Dearness_AllownceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDearness_AllownceNull()
            Me(Me.tabledsSalarySheet.Dearness_AllownceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEOBI_ContributionNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.EOBI_ContributionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEOBI_ContributionNull()
            Me(Me.tabledsSalarySheet.EOBI_ContributionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUniform_DeductionNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Uniform_DeductionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUniform_DeductionNull()
            Me(Me.tabledsSalarySheet.Uniform_DeductionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSite_Visit_DeductionNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Site_Visit_DeductionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSite_Visit_DeductionNull()
            Me(Me.tabledsSalarySheet.Site_Visit_DeductionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFine_and_PenalityNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Fine_and_PenalityColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFine_and_PenalityNull()
            Me(Me.tabledsSalarySheet.Fine_and_PenalityColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOver_TimeNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Over_TimeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOver_TimeNull()
            Me(Me.tabledsSalarySheet.Over_TimeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotal_SalaryNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Total_SalaryColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotal_SalaryNull()
            Me(Me.tabledsSalarySheet.Total_SalaryColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsProvident_FundNull() As Boolean
            Return Me.IsNull(Me.tabledsSalarySheet.Provident_FundColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetProvident_FundNull()
            Me(Me.tabledsSalarySheet.Provident_FundColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class dsSalarySheetRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As dsSalarySheetRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As dsSalarySheetRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As dsSalarySheetRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
